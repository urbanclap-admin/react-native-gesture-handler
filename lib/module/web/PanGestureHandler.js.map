{"version":3,"names":["Hammer","MULTI_FINGER_PAN_MAX_PINCH_THRESHOLD","MULTI_FINGER_PAN_MAX_ROTATION_THRESHOLD","DraggingGestureHandler","isValidNumber","isnan","TEST_MIN_IF_NOT_NAN","VEC_LEN_SQ","State","PanGestureHandler","name","NativeGestureClass","Pan","getHammerConfig","direction","getDirection","getState","type","nextState","previousState","UNDETERMINED","ACTIVE","BEGAN","config","getConfig","activeOffsetXStart","activeOffsetXEnd","activeOffsetYStart","activeOffsetYEnd","minDist","directions","horizontalDirections","DIRECTION_ALL","push","DIRECTION_LEFT","DIRECTION_RIGHT","length","DIRECTION_HORIZONTAL","concat","verticalDirections","DIRECTION_UP","DIRECTION_DOWN","DIRECTION_VERTICAL","DIRECTION_NONE","hasCustomActivationCriteria","minDistSq","shouldFailUnderCustomCriteria","_ref","criteria","deltaX","deltaY","failOffsetXStart","failOffsetXEnd","failOffsetYStart","failOffsetYEnd","shouldActivateUnderCustomCriteria","_ref2","velocity","x","y","minVelocityX","minVelocityY","minVelocitySq","shouldMultiFingerPanFail","_ref3","pointerLength","scale","deltaRotation","deltaScale","Math","abs","absDeltaRotation","updateHasCustomActivationCriteria","isGestureEnabledForEvent","props","_recognizer","inputData","failed","velocityX","velocityY","maxPointers","success"],"sources":["PanGestureHandler.ts"],"sourcesContent":["import Hammer from '@egjs/hammerjs';\n\nimport {\n  EventMap,\n  MULTI_FINGER_PAN_MAX_PINCH_THRESHOLD,\n  MULTI_FINGER_PAN_MAX_ROTATION_THRESHOLD,\n} from './constants';\nimport DraggingGestureHandler from './DraggingGestureHandler';\nimport { isValidNumber, isnan, TEST_MIN_IF_NOT_NAN, VEC_LEN_SQ } from './utils';\nimport { State } from '../State';\n\nimport { Config, HammerInputExt } from './GestureHandler';\nclass PanGestureHandler extends DraggingGestureHandler {\n  get name() {\n    return 'pan';\n  }\n\n  get NativeGestureClass() {\n    return Hammer.Pan;\n  }\n\n  getHammerConfig() {\n    return {\n      ...super.getHammerConfig(),\n      direction: this.getDirection(),\n    };\n  }\n\n  getState(type: keyof typeof EventMap) {\n    const nextState = super.getState(type);\n    // Ensure that the first state sent is `BEGAN` and not `ACTIVE`\n    if (\n      this.previousState === State.UNDETERMINED &&\n      nextState === State.ACTIVE\n    ) {\n      return State.BEGAN;\n    }\n    return nextState;\n  }\n\n  getDirection() {\n    const config = this.getConfig();\n    const {\n      activeOffsetXStart,\n      activeOffsetXEnd,\n      activeOffsetYStart,\n      activeOffsetYEnd,\n      minDist,\n    } = config;\n    let directions: number[] = [];\n    let horizontalDirections = [];\n\n    if (!isnan(minDist)) {\n      return Hammer.DIRECTION_ALL;\n    }\n\n    if (!isnan(activeOffsetXStart))\n      horizontalDirections.push(Hammer.DIRECTION_LEFT);\n    if (!isnan(activeOffsetXEnd))\n      horizontalDirections.push(Hammer.DIRECTION_RIGHT);\n    if (horizontalDirections.length === 2)\n      horizontalDirections = [Hammer.DIRECTION_HORIZONTAL];\n\n    directions = directions.concat(horizontalDirections);\n    let verticalDirections = [];\n\n    if (!isnan(activeOffsetYStart))\n      verticalDirections.push(Hammer.DIRECTION_UP);\n    if (!isnan(activeOffsetYEnd))\n      verticalDirections.push(Hammer.DIRECTION_DOWN);\n\n    if (verticalDirections.length === 2)\n      verticalDirections = [Hammer.DIRECTION_VERTICAL];\n\n    directions = directions.concat(verticalDirections);\n\n    if (!directions.length) {\n      return Hammer.DIRECTION_NONE;\n    }\n    if (\n      directions[0] === Hammer.DIRECTION_HORIZONTAL &&\n      directions[1] === Hammer.DIRECTION_VERTICAL\n    ) {\n      return Hammer.DIRECTION_ALL;\n    }\n    if (horizontalDirections.length && verticalDirections.length) {\n      return Hammer.DIRECTION_ALL;\n    }\n\n    return directions[0];\n  }\n\n  getConfig() {\n    if (!this.hasCustomActivationCriteria) {\n      // Default config\n      // If no params have been defined then this config should emulate the native gesture as closely as possible.\n      return {\n        minDistSq: 10,\n      };\n    }\n    return this.config;\n  }\n\n  shouldFailUnderCustomCriteria(\n    { deltaX, deltaY }: HammerInputExt,\n    criteria: any\n  ) {\n    return (\n      (!isnan(criteria.failOffsetXStart) &&\n        deltaX < criteria.failOffsetXStart) ||\n      (!isnan(criteria.failOffsetXEnd) && deltaX > criteria.failOffsetXEnd) ||\n      (!isnan(criteria.failOffsetYStart) &&\n        deltaY < criteria.failOffsetYStart) ||\n      (!isnan(criteria.failOffsetYEnd) && deltaY > criteria.failOffsetYEnd)\n    );\n  }\n\n  shouldActivateUnderCustomCriteria(\n    { deltaX, deltaY, velocity }: any,\n    criteria: any\n  ) {\n    return (\n      (!isnan(criteria.activeOffsetXStart) &&\n        deltaX < criteria.activeOffsetXStart) ||\n      (!isnan(criteria.activeOffsetXEnd) &&\n        deltaX > criteria.activeOffsetXEnd) ||\n      (!isnan(criteria.activeOffsetYStart) &&\n        deltaY < criteria.activeOffsetYStart) ||\n      (!isnan(criteria.activeOffsetYEnd) &&\n        deltaY > criteria.activeOffsetYEnd) ||\n      TEST_MIN_IF_NOT_NAN(\n        VEC_LEN_SQ({ x: deltaX, y: deltaY }),\n        criteria.minDistSq\n      ) ||\n      TEST_MIN_IF_NOT_NAN(velocity.x, criteria.minVelocityX) ||\n      TEST_MIN_IF_NOT_NAN(velocity.y, criteria.minVelocityY) ||\n      TEST_MIN_IF_NOT_NAN(VEC_LEN_SQ(velocity), criteria.minVelocitySq)\n    );\n  }\n\n  shouldMultiFingerPanFail({\n    pointerLength,\n    scale,\n    deltaRotation,\n  }: {\n    deltaRotation: number;\n    pointerLength: number;\n    scale: number;\n  }) {\n    if (pointerLength <= 1) {\n      return false;\n    }\n\n    // Test if the pan had too much pinching or rotating.\n    const deltaScale = Math.abs(scale - 1);\n    const absDeltaRotation = Math.abs(deltaRotation);\n    if (deltaScale > MULTI_FINGER_PAN_MAX_PINCH_THRESHOLD) {\n      // > If the threshold doesn't seem right.\n      // You can log the value which it failed at here:\n      return true;\n    }\n    if (absDeltaRotation > MULTI_FINGER_PAN_MAX_ROTATION_THRESHOLD) {\n      // > If the threshold doesn't seem right.\n      // You can log the value which it failed at here:\n      return true;\n    }\n\n    return false;\n  }\n\n  updateHasCustomActivationCriteria(\n    criteria: Config & { minVelocityX?: number; minVelocityY?: number }\n  ) {\n    return (\n      isValidNumber(criteria.minDistSq) ||\n      isValidNumber(criteria.minVelocityX) ||\n      isValidNumber(criteria.minVelocityY) ||\n      isValidNumber(criteria.minVelocitySq) ||\n      isValidNumber(criteria.activeOffsetXStart) ||\n      isValidNumber(criteria.activeOffsetXEnd) ||\n      isValidNumber(criteria.activeOffsetYStart) ||\n      isValidNumber(criteria.activeOffsetYEnd)\n    );\n  }\n\n  isGestureEnabledForEvent(\n    props: any,\n    _recognizer: any,\n    inputData: HammerInputExt & { deltaRotation: number }\n  ) {\n    if (this.shouldFailUnderCustomCriteria(inputData, props)) {\n      return { failed: true };\n    }\n\n    const velocity = { x: inputData.velocityX, y: inputData.velocityY };\n    if (\n      this.hasCustomActivationCriteria &&\n      this.shouldActivateUnderCustomCriteria(\n        { deltaX: inputData.deltaX, deltaY: inputData.deltaY, velocity },\n        props\n      )\n    ) {\n      if (\n        this.shouldMultiFingerPanFail({\n          pointerLength: inputData.maxPointers,\n          scale: inputData.scale,\n          deltaRotation: inputData.deltaRotation,\n        })\n      ) {\n        return {\n          failed: true,\n        };\n      }\n      return { success: true };\n    }\n    return { success: false };\n  }\n}\n\nexport default PanGestureHandler;\n"],"mappings":"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"}