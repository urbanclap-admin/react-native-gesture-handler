{"version":3,"names":["GestureHandler","TEST_MAX_IF_NOT_NAN","DiscreteGestureHandler","isDiscrete","shouldEnableGestureOnSetup","shouldFailUnderCustomCriteria","_ref","_ref2","x","y","deltaX","deltaY","maxDeltaX","maxDeltaY","maxDistSq","shouldCancelWhenOutside","isPointInView","Math","abs","transformNativeEvent","_ref3","center","rect","view","getBoundingClientRect","absoluteX","absoluteY","left","top","isGestureEnabledForEvent","_ref4","_recognizer","_ref5","minPointers","maxPointers","pointerLength","validPointerCount","isGestureRunning","failed","success"],"sources":["DiscreteGestureHandler.ts"],"sourcesContent":["/* eslint-disable eslint-comments/no-unlimited-disable */\n/* eslint-disable */\nimport GestureHandler from './GestureHandler';\nimport { TEST_MAX_IF_NOT_NAN } from './utils';\n\nabstract class DiscreteGestureHandler extends GestureHandler {\n  get isDiscrete() {\n    return true;\n  }\n\n  get shouldEnableGestureOnSetup() {\n    return true;\n  }\n\n  shouldFailUnderCustomCriteria(\n    { x, y, deltaX, deltaY }: any,\n    { maxDeltaX, maxDeltaY, maxDistSq, shouldCancelWhenOutside }: any\n  ) {\n    if (shouldCancelWhenOutside) {\n      if (!this.isPointInView({ x, y })) {\n        return true;\n      }\n    }\n    return (\n      TEST_MAX_IF_NOT_NAN(Math.abs(deltaX), maxDeltaX) ||\n      TEST_MAX_IF_NOT_NAN(Math.abs(deltaY), maxDeltaY) ||\n      TEST_MAX_IF_NOT_NAN(\n        Math.abs(deltaY * deltaY + deltaX * deltaX),\n        maxDistSq\n      )\n    );\n  }\n\n  transformNativeEvent({ center: { x, y } }: any) {\n    // @ts-ignore FIXME(TS)\n    const rect = this.view!.getBoundingClientRect();\n\n    return {\n      absoluteX: x,\n      absoluteY: y,\n      x: x - rect.left,\n      y: y - rect.top,\n    };\n  }\n\n  isGestureEnabledForEvent(\n    {\n      minPointers,\n      maxPointers,\n      maxDeltaX,\n      maxDeltaY,\n      maxDistSq,\n      shouldCancelWhenOutside,\n    }: any,\n    _recognizer: any,\n    { maxPointers: pointerLength, center, deltaX, deltaY }: any\n  ) {\n    const validPointerCount =\n      pointerLength >= minPointers && pointerLength <= maxPointers;\n\n    if (\n      this.shouldFailUnderCustomCriteria(\n        { ...center, deltaX, deltaY },\n        {\n          maxDeltaX,\n          maxDeltaY,\n          maxDistSq,\n          shouldCancelWhenOutside,\n        }\n      ) ||\n      // A user probably won't land a multi-pointer tap on the first tick (so we cannot just cancel each time)\n      // but if the gesture is running and the user adds or subtracts another pointer then it should fail.\n      (!validPointerCount && this.isGestureRunning)\n    ) {\n      return { failed: true };\n    }\n\n    return { success: validPointerCount };\n  }\n}\n\nexport default DiscreteGestureHandler;\n"],"mappings":"AAAA;AACA;AACA,OAAOA,cAAc,MAAM,kBAAkB;AAC7C,SAASC,mBAAmB,QAAQ,SAAS;AAE7C,MAAeC,sBAAsB,SAASF,cAAc,CAAC;EAC3D,IAAIG,UAAUA,CAAA,EAAG;IACf,OAAO,IAAI;EACb;EAEA,IAAIC,0BAA0BA,CAAA,EAAG;IAC/B,OAAO,IAAI;EACb;EAEAC,6BAA6BA,CAAAC,IAAA,EAAAC,KAAA,EAG3B;IAAA,IAFA;MAAEC,CAAC;MAAEC,CAAC;MAAEC,MAAM;MAAEC;IAAY,CAAC,GAAAL,IAAA;IAAA,IAC7B;MAAEM,SAAS;MAAEC,SAAS;MAAEC,SAAS;MAAEC;IAA6B,CAAC,GAAAR,KAAA;IAEjE,IAAIQ,uBAAuB,EAAE;MAC3B,IAAI,CAAC,IAAI,CAACC,aAAa,CAAC;QAAER,CAAC;QAAEC;MAAE,CAAC,CAAC,EAAE;QACjC,OAAO,IAAI;MACb;IACF;IACA,OACER,mBAAmB,CAACgB,IAAI,CAACC,GAAG,CAACR,MAAM,CAAC,EAAEE,SAAS,CAAC,IAChDX,mBAAmB,CAACgB,IAAI,CAACC,GAAG,CAACP,MAAM,CAAC,EAAEE,SAAS,CAAC,IAChDZ,mBAAmB,CACjBgB,IAAI,CAACC,GAAG,CAACP,MAAM,GAAGA,MAAM,GAAGD,MAAM,GAAGA,MAAM,CAAC,EAC3CI,SACF,CAAC;EAEL;EAEAK,oBAAoBA,CAAAC,KAAA,EAA4B;IAAA,IAA3B;MAAEC,MAAM,EAAE;QAAEb,CAAC;QAAEC;MAAE;IAAO,CAAC,GAAAW,KAAA;IAC5C;IACA,MAAME,IAAI,GAAG,IAAI,CAACC,IAAI,CAAEC,qBAAqB,CAAC,CAAC;IAE/C,OAAO;MACLC,SAAS,EAAEjB,CAAC;MACZkB,SAAS,EAAEjB,CAAC;MACZD,CAAC,EAAEA,CAAC,GAAGc,IAAI,CAACK,IAAI;MAChBlB,CAAC,EAAEA,CAAC,GAAGa,IAAI,CAACM;IACd,CAAC;EACH;EAEAC,wBAAwBA,CAAAC,KAAA,EAStBC,WAAgB,EAAAC,KAAA,EAEhB;IAAA,IAVA;MACEC,WAAW;MACXC,WAAW;MACXtB,SAAS;MACTC,SAAS;MACTC,SAAS;MACTC;IACG,CAAC,GAAAe,KAAA;IAAA,IAEN;MAAEI,WAAW,EAAEC,aAAa;MAAEd,MAAM;MAAEX,MAAM;MAAEC;IAAY,CAAC,GAAAqB,KAAA;IAE3D,MAAMI,iBAAiB,GACrBD,aAAa,IAAIF,WAAW,IAAIE,aAAa,IAAID,WAAW;IAE9D,IACE,IAAI,CAAC7B,6BAA6B,CAChC;MAAE,GAAGgB,MAAM;MAAEX,MAAM;MAAEC;IAAO,CAAC,EAC7B;MACEC,SAAS;MACTC,SAAS;MACTC,SAAS;MACTC;IACF,CACF,CAAC;IACD;IACA;IACC,CAACqB,iBAAiB,IAAI,IAAI,CAACC,gBAAiB,EAC7C;MACA,OAAO;QAAEC,MAAM,EAAE;MAAK,CAAC;IACzB;IAEA,OAAO;MAAEC,OAAO,EAAEH;IAAkB,CAAC;EACvC;AACF;AAEA,eAAelC,sBAAsB"}