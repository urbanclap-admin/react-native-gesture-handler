{"version":3,"names":["ContinousBaseGesture","changeEventCalculator","current","previous","changePayload","undefined","changeX","translationX","changeY","translationY","PanGesture","constructor","_defineProperty","handlerName","activeOffsetY","offset","Array","isArray","config","activeOffsetYStart","activeOffsetYEnd","activeOffsetX","activeOffsetXStart","activeOffsetXEnd","failOffsetY","failOffsetYStart","failOffsetYEnd","failOffsetX","failOffsetXStart","failOffsetXEnd","minPointers","maxPointers","minDistance","distance","minDist","minVelocity","velocity","minVelocityX","minVelocityY","averageTouches","value","avgTouches","enableTrackpadTwoFingerGesture","onChange","callback","handlers"],"sources":["panGesture.ts"],"sourcesContent":["import { BaseGestureConfig, ContinousBaseGesture } from './gesture';\nimport { GestureUpdateEvent } from '../gestureHandlerCommon';\nimport {\n  PanGestureConfig,\n  PanGestureHandlerEventPayload,\n} from '../PanGestureHandler';\n\ntype PanGestureChangeEventPayload = {\n  changeX: number;\n  changeY: number;\n};\n\nfunction changeEventCalculator(\n  current: GestureUpdateEvent<PanGestureHandlerEventPayload>,\n  previous?: GestureUpdateEvent<PanGestureHandlerEventPayload>\n) {\n  'worklet';\n  let changePayload: PanGestureChangeEventPayload;\n  if (previous === undefined) {\n    changePayload = {\n      changeX: current.translationX,\n      changeY: current.translationY,\n    };\n  } else {\n    changePayload = {\n      changeX: current.translationX - previous.translationX,\n      changeY: current.translationY - previous.translationY,\n    };\n  }\n\n  return { ...current, ...changePayload };\n}\n\nexport class PanGesture extends ContinousBaseGesture<\n  PanGestureHandlerEventPayload,\n  PanGestureChangeEventPayload\n> {\n  public config: BaseGestureConfig & PanGestureConfig = {};\n\n  constructor() {\n    super();\n\n    this.handlerName = 'PanGestureHandler';\n  }\n\n  activeOffsetY(offset: number | number[]) {\n    if (Array.isArray(offset)) {\n      this.config.activeOffsetYStart = offset[0];\n      this.config.activeOffsetYEnd = offset[1];\n    } else if (offset < 0) {\n      this.config.activeOffsetYStart = offset;\n    } else {\n      this.config.activeOffsetYEnd = offset;\n    }\n    return this;\n  }\n\n  activeOffsetX(offset: number | number[]) {\n    if (Array.isArray(offset)) {\n      this.config.activeOffsetXStart = offset[0];\n      this.config.activeOffsetXEnd = offset[1];\n    } else if (offset < 0) {\n      this.config.activeOffsetXStart = offset;\n    } else {\n      this.config.activeOffsetXEnd = offset;\n    }\n    return this;\n  }\n\n  failOffsetY(offset: number | number[]) {\n    if (Array.isArray(offset)) {\n      this.config.failOffsetYStart = offset[0];\n      this.config.failOffsetYEnd = offset[1];\n    } else if (offset < 0) {\n      this.config.failOffsetYStart = offset;\n    } else {\n      this.config.failOffsetYEnd = offset;\n    }\n    return this;\n  }\n\n  failOffsetX(offset: number | number[]) {\n    if (Array.isArray(offset)) {\n      this.config.failOffsetXStart = offset[0];\n      this.config.failOffsetXEnd = offset[1];\n    } else if (offset < 0) {\n      this.config.failOffsetXStart = offset;\n    } else {\n      this.config.failOffsetXEnd = offset;\n    }\n    return this;\n  }\n\n  minPointers(minPointers: number) {\n    this.config.minPointers = minPointers;\n    return this;\n  }\n\n  maxPointers(maxPointers: number) {\n    this.config.maxPointers = maxPointers;\n    return this;\n  }\n\n  minDistance(distance: number) {\n    this.config.minDist = distance;\n    return this;\n  }\n\n  minVelocity(velocity: number) {\n    this.config.minVelocity = velocity;\n    return this;\n  }\n\n  minVelocityX(velocity: number) {\n    this.config.minVelocityX = velocity;\n    return this;\n  }\n\n  minVelocityY(velocity: number) {\n    this.config.minVelocityY = velocity;\n    return this;\n  }\n\n  averageTouches(value: boolean) {\n    this.config.avgTouches = value;\n    return this;\n  }\n\n  enableTrackpadTwoFingerGesture(value: boolean) {\n    this.config.enableTrackpadTwoFingerGesture = value;\n    return this;\n  }\n\n  onChange(\n    callback: (\n      event: GestureUpdateEvent<\n        PanGestureHandlerEventPayload & PanGestureChangeEventPayload\n      >\n    ) => void\n  ) {\n    // @ts-ignore TS being overprotective, PanGestureHandlerEventPayload is Record\n    this.handlers.changeEventCalculator = changeEventCalculator;\n    return super.onChange(callback);\n  }\n}\n\nexport type PanGestureType = InstanceType<typeof PanGesture>;\n"],"mappings":"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"}