{"version":3,"names":["React","useEffect","useRef","BaseGesture","CALLBACK_TYPE","Reanimated","registerHandler","unregisterHandler","RNGestureHandlerModule","baseGestureHandlerWithMonitorProps","filterConfig","findNodeHandle","GestureStateManager","flingGestureHandlerProps","forceTouchGestureHandlerProps","longPressGestureHandlerProps","panGestureHandlerProps","panGestureHandlerCustomNativeProps","tapGestureHandlerProps","State","EventType","ALLOWED_PROPS","convertToHandlerTag","ref","handlerTag","_ref$current$handlerT","_ref$current","current","extractValidHandlerTags","interactionGroup","_interactionGroup$map","_interactionGroup$map2","map","filter","tag","dropHandlers","preparedGesture","handler","config","dropGestureHandler","attachHandlers","_ref","gestureConfig","gesture","viewTag","useAnimated","firstExecution","initialize","setImmediate","prepare","createGestureHandler","handlerName","requireToFail","simultaneousWith","updateGestureHandler","simultaneousHandlers","waitFor","attachGestureHandler","animatedHandlers","value","g","handlers","updateHandlers","i","length","needsToReattach","useAnimatedGesture","isStateChangeEvent","event","oldState","isTouchEvent","eventType","getHandler","type","BEGAN","onBegin","START","onStart","UPDATE","onUpdate","CHANGE","onChange","END","onEnd","FINALIZE","onFinalize","TOUCHES_DOWN","onTouchesDown","TOUCHES_MOVE","onTouchesMove","TOUCHES_UP","onTouchesUp","TOUCHES_CANCELLED","onTouchesCancelled","touchEventTypeToCallbackType","UNDEFINED","runWorklet","isWorklet","_len","arguments","args","Array","_key","console","warn","sharedHandlersCallbacks","useSharedValue","lastUpdateEvent","stateControllers","callback","currentCallback","UNDETERMINED","state","ACTIVE","undefined","FAILED","CANCELLED","create","changeEventCalculator","_gesture$changeEventC","call","useEvent","animatedEventHandler","GestureDetector","props","_gestureConfig$toGest","_gestureConfig$toGest2","toGestureArray","find","reduce","prev","viewRef","firstRenderRef","Error","_gestureConfig$initia","createElement","AnimatedWrap","onGestureHandlerEvent","children","Wrap","Component","render","child","Children","only","cloneElement","collapsable","_Reanimated$default$c","_Reanimated$default","default","createAnimatedComponent"],"sources":["GestureDetector.tsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport {\n  GestureType,\n  HandlerCallbacks,\n  BaseGesture,\n  GestureRef,\n  CALLBACK_TYPE,\n} from './gesture';\nimport { Reanimated, SharedValue } from './reanimatedWrapper';\nimport { registerHandler, unregisterHandler } from '../handlersRegistry';\nimport RNGestureHandlerModule from '../../RNGestureHandlerModule';\nimport {\n  baseGestureHandlerWithMonitorProps,\n  filterConfig,\n  findNodeHandle,\n  GestureTouchEvent,\n  GestureUpdateEvent,\n  GestureStateChangeEvent,\n} from '../gestureHandlerCommon';\nimport {\n  GestureStateManager,\n  GestureStateManagerType,\n} from './gestureStateManager';\nimport { flingGestureHandlerProps } from '../FlingGestureHandler';\nimport { forceTouchGestureHandlerProps } from '../ForceTouchGestureHandler';\nimport { longPressGestureHandlerProps } from '../LongPressGestureHandler';\nimport {\n  panGestureHandlerProps,\n  panGestureHandlerCustomNativeProps,\n} from '../PanGestureHandler';\nimport { tapGestureHandlerProps } from '../TapGestureHandler';\nimport { State } from '../../State';\nimport { EventType } from '../../EventType';\nimport { ComposedGesture } from './gestureComposition';\n\nconst ALLOWED_PROPS = [\n  ...baseGestureHandlerWithMonitorProps,\n  ...tapGestureHandlerProps,\n  ...panGestureHandlerProps,\n  ...panGestureHandlerCustomNativeProps,\n  ...longPressGestureHandlerProps,\n  ...forceTouchGestureHandlerProps,\n  ...flingGestureHandlerProps,\n];\n\nexport type GestureConfigReference = {\n  config: GestureType[];\n  animatedEventHandler: unknown;\n  animatedHandlers: SharedValue<\n    HandlerCallbacks<Record<string, unknown>>[] | null\n  > | null;\n  firstExecution: boolean;\n  useAnimated: boolean;\n};\n\nfunction convertToHandlerTag(ref: GestureRef): number {\n  if (typeof ref === 'number') {\n    return ref;\n  } else if (ref instanceof BaseGesture) {\n    return ref.handlerTag;\n  } else {\n    // @ts-ignore in this case it should be a ref either to gesture object or\n    // a gesture handler component, in both cases handlerTag property exists\n    return ref.current?.handlerTag ?? -1;\n  }\n}\n\nfunction extractValidHandlerTags(interactionGroup: GestureRef[] | undefined) {\n  return (\n    interactionGroup?.map(convertToHandlerTag)?.filter((tag) => tag > 0) ?? []\n  );\n}\n\nfunction dropHandlers(preparedGesture: GestureConfigReference) {\n  for (const handler of preparedGesture.config) {\n    RNGestureHandlerModule.dropGestureHandler(handler.handlerTag);\n\n    unregisterHandler(handler.handlerTag);\n  }\n}\n\ninterface AttachHandlersConfig {\n  preparedGesture: GestureConfigReference;\n  gestureConfig: ComposedGesture | GestureType | undefined;\n  gesture: GestureType[];\n  viewTag: number;\n  useAnimated: boolean;\n}\n\nfunction attachHandlers({\n  preparedGesture,\n  gestureConfig,\n  gesture,\n  viewTag,\n  useAnimated,\n}: AttachHandlersConfig) {\n  if (!preparedGesture.firstExecution) {\n    gestureConfig?.initialize();\n  } else {\n    preparedGesture.firstExecution = false;\n  }\n\n  // use setImmediate to extract handlerTags, because all refs should be initialized\n  // when it's ran\n  setImmediate(() => {\n    gestureConfig?.prepare();\n  });\n\n  for (const handler of gesture) {\n    RNGestureHandlerModule.createGestureHandler(\n      handler.handlerName,\n      handler.handlerTag,\n      filterConfig(handler.config, ALLOWED_PROPS)\n    );\n\n    registerHandler(handler.handlerTag, handler);\n\n    // use setImmediate to extract handlerTags, because all refs should be initialized\n    // when it's ran\n    setImmediate(() => {\n      let requireToFail: number[] = [];\n      if (handler.config.requireToFail) {\n        requireToFail = extractValidHandlerTags(handler.config.requireToFail);\n      }\n\n      let simultaneousWith: number[] = [];\n      if (handler.config.simultaneousWith) {\n        simultaneousWith = extractValidHandlerTags(\n          handler.config.simultaneousWith\n        );\n      }\n\n      RNGestureHandlerModule.updateGestureHandler(\n        handler.handlerTag,\n        filterConfig(handler.config, ALLOWED_PROPS, {\n          simultaneousHandlers: simultaneousWith,\n          waitFor: requireToFail,\n        })\n      );\n    });\n  }\n  preparedGesture.config = gesture;\n\n  for (const gesture of preparedGesture.config) {\n    RNGestureHandlerModule.attachGestureHandler(\n      gesture.handlerTag,\n      viewTag,\n      !useAnimated // send direct events when using animatedGesture, device events otherwise\n    );\n  }\n\n  if (preparedGesture.animatedHandlers) {\n    preparedGesture.animatedHandlers.value = (gesture.map(\n      (g) => g.handlers\n    ) as unknown) as HandlerCallbacks<Record<string, unknown>>[];\n  }\n}\n\nfunction updateHandlers(\n  preparedGesture: GestureConfigReference,\n  gestureConfig: ComposedGesture | GestureType | undefined,\n  gesture: GestureType[]\n) {\n  gestureConfig?.prepare();\n\n  for (let i = 0; i < gesture.length; i++) {\n    const handler = preparedGesture.config[i];\n\n    gesture[i].handlerTag = handler.handlerTag;\n    gesture[i].handlers.handlerTag = handler.handlerTag;\n  }\n\n  // use setImmediate to extract handlerTags, because when it's ran, all refs should be updated\n  // and handlerTags in BaseGesture references should be updated in the loop above (we need to wait\n  // in case of external relations)\n  setImmediate(() => {\n    for (let i = 0; i < gesture.length; i++) {\n      const handler = preparedGesture.config[i];\n\n      handler.config = gesture[i].config;\n      handler.handlers = gesture[i].handlers;\n      handler.handlers.handlerTag = handler.handlerTag;\n\n      const requireToFail = extractValidHandlerTags(\n        handler.config.requireToFail\n      );\n\n      const simultaneousWith = extractValidHandlerTags(\n        handler.config.simultaneousWith\n      );\n\n      RNGestureHandlerModule.updateGestureHandler(\n        handler.handlerTag,\n        filterConfig(handler.config, ALLOWED_PROPS, {\n          simultaneousHandlers: simultaneousWith,\n          waitFor: requireToFail,\n        })\n      );\n\n      registerHandler(handler.handlerTag, handler);\n    }\n\n    if (preparedGesture.animatedHandlers) {\n      preparedGesture.animatedHandlers.value = (preparedGesture.config.map(\n        (g) => g.handlers\n      ) as unknown) as HandlerCallbacks<Record<string, unknown>>[];\n    }\n  });\n}\n\nfunction needsToReattach(\n  preparedGesture: GestureConfigReference,\n  gesture: GestureType[]\n) {\n  if (gesture.length !== preparedGesture.config.length) {\n    return true;\n  }\n  for (let i = 0; i < gesture.length; i++) {\n    if (gesture[i].handlerName !== preparedGesture.config[i].handlerName) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction useAnimatedGesture(preparedGesture: GestureConfigReference) {\n  if (!Reanimated) {\n    return;\n  }\n\n  function isStateChangeEvent(\n    event: GestureUpdateEvent | GestureStateChangeEvent | GestureTouchEvent\n  ): event is GestureStateChangeEvent {\n    'worklet';\n    // @ts-ignore Yes, the oldState prop is missing on GestureTouchEvent, that's the point\n    return event.oldState != null;\n  }\n\n  function isTouchEvent(\n    event: GestureUpdateEvent | GestureStateChangeEvent | GestureTouchEvent\n  ): event is GestureTouchEvent {\n    'worklet';\n    return event.eventType != null;\n  }\n\n  function getHandler(\n    type: CALLBACK_TYPE,\n    gesture: HandlerCallbacks<Record<string, unknown>>\n  ) {\n    'worklet';\n    switch (type) {\n      case CALLBACK_TYPE.BEGAN:\n        return gesture.onBegin;\n      case CALLBACK_TYPE.START:\n        return gesture.onStart;\n      case CALLBACK_TYPE.UPDATE:\n        return gesture.onUpdate;\n      case CALLBACK_TYPE.CHANGE:\n        return gesture.onChange;\n      case CALLBACK_TYPE.END:\n        return gesture.onEnd;\n      case CALLBACK_TYPE.FINALIZE:\n        return gesture.onFinalize;\n      case CALLBACK_TYPE.TOUCHES_DOWN:\n        return gesture.onTouchesDown;\n      case CALLBACK_TYPE.TOUCHES_MOVE:\n        return gesture.onTouchesMove;\n      case CALLBACK_TYPE.TOUCHES_UP:\n        return gesture.onTouchesUp;\n      case CALLBACK_TYPE.TOUCHES_CANCELLED:\n        return gesture.onTouchesCancelled;\n    }\n  }\n\n  function touchEventTypeToCallbackType(eventType: EventType): CALLBACK_TYPE {\n    'worklet';\n    switch (eventType) {\n      case EventType.TOUCHES_DOWN:\n        return CALLBACK_TYPE.TOUCHES_DOWN;\n      case EventType.TOUCHES_MOVE:\n        return CALLBACK_TYPE.TOUCHES_MOVE;\n      case EventType.TOUCHES_UP:\n        return CALLBACK_TYPE.TOUCHES_UP;\n      case EventType.TOUCHES_CANCELLED:\n        return CALLBACK_TYPE.TOUCHES_CANCELLED;\n    }\n    return CALLBACK_TYPE.UNDEFINED;\n  }\n\n  function runWorklet(\n    type: CALLBACK_TYPE,\n    gesture: HandlerCallbacks<Record<string, unknown>>,\n    event: GestureStateChangeEvent | GestureUpdateEvent | GestureTouchEvent,\n    ...args: any[]\n  ) {\n    'worklet';\n    const handler = getHandler(type, gesture);\n    if (gesture.isWorklet[type]) {\n      // @ts-ignore Logic below makes sure the correct event is send to the\n      // correct handler.\n      handler?.(event, ...args);\n    } else if (handler) {\n      console.warn('Animated gesture callback must be a worklet');\n    }\n  }\n\n  // Hooks are called conditionally, but the condition is whether the\n  // react-native-reanimated is installed, which shouldn't change while running\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  const sharedHandlersCallbacks = Reanimated.useSharedValue<\n    HandlerCallbacks<Record<string, unknown>>[] | null\n  >(null);\n\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  const lastUpdateEvent = Reanimated.useSharedValue<\n    (GestureUpdateEvent | undefined)[]\n  >([]);\n\n  // not every gesture needs a state controller, init them lazily\n  const stateControllers: GestureStateManagerType[] = [];\n\n  const callback = (\n    event: GestureStateChangeEvent | GestureUpdateEvent | GestureTouchEvent\n  ) => {\n    'worklet';\n\n    const currentCallback = sharedHandlersCallbacks.value;\n    if (!currentCallback) {\n      return;\n    }\n\n    for (let i = 0; i < currentCallback.length; i++) {\n      const gesture = currentCallback[i];\n\n      if (event.handlerTag === gesture.handlerTag) {\n        if (isStateChangeEvent(event)) {\n          if (\n            event.oldState === State.UNDETERMINED &&\n            event.state === State.BEGAN\n          ) {\n            runWorklet(CALLBACK_TYPE.BEGAN, gesture, event);\n          } else if (\n            (event.oldState === State.BEGAN ||\n              event.oldState === State.UNDETERMINED) &&\n            event.state === State.ACTIVE\n          ) {\n            runWorklet(CALLBACK_TYPE.START, gesture, event);\n            lastUpdateEvent.value[gesture.handlerTag] = undefined;\n          } else if (\n            event.oldState !== event.state &&\n            event.state === State.END\n          ) {\n            if (event.oldState === State.ACTIVE) {\n              runWorklet(CALLBACK_TYPE.END, gesture, event, true);\n            }\n            runWorklet(CALLBACK_TYPE.FINALIZE, gesture, event, true);\n          } else if (\n            (event.state === State.FAILED || event.state === State.CANCELLED) &&\n            event.state !== event.oldState\n          ) {\n            if (event.oldState === State.ACTIVE) {\n              runWorklet(CALLBACK_TYPE.END, gesture, event, false);\n            }\n            runWorklet(CALLBACK_TYPE.FINALIZE, gesture, event, false);\n          }\n        } else if (isTouchEvent(event)) {\n          if (!stateControllers[i]) {\n            stateControllers[i] = GestureStateManager.create(event.handlerTag);\n          }\n\n          if (event.eventType !== EventType.UNDETERMINED) {\n            runWorklet(\n              touchEventTypeToCallbackType(event.eventType),\n              gesture,\n              event,\n              stateControllers[i]\n            );\n          }\n        } else {\n          runWorklet(CALLBACK_TYPE.UPDATE, gesture, event);\n\n          if (gesture.onChange && gesture.changeEventCalculator) {\n            runWorklet(\n              CALLBACK_TYPE.CHANGE,\n              gesture,\n              gesture.changeEventCalculator?.(\n                event,\n                lastUpdateEvent.value[gesture.handlerTag]\n              )\n            );\n\n            lastUpdateEvent.value[gesture.handlerTag] = event;\n          }\n        }\n      }\n    }\n  };\n\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  const event = Reanimated.useEvent(\n    callback,\n    ['onGestureHandlerStateChange', 'onGestureHandlerEvent'],\n    true\n  );\n\n  preparedGesture.animatedEventHandler = event;\n  preparedGesture.animatedHandlers = sharedHandlersCallbacks;\n}\n\ninterface GestureDetectorProps {\n  gesture?: ComposedGesture | GestureType;\n}\nexport const GestureDetector: React.FunctionComponent<GestureDetectorProps> = (\n  props\n) => {\n  const gestureConfig = props.gesture;\n  const gesture = gestureConfig?.toGestureArray?.() ?? [];\n  const useAnimated =\n    gesture.find((gesture) =>\n      gesture.handlers.isWorklet.reduce((prev, current) => prev || current)\n    ) != null;\n  const viewRef = useRef(null);\n  const firstRenderRef = useRef(true);\n\n  const preparedGesture = React.useRef<GestureConfigReference>({\n    config: gesture,\n    animatedEventHandler: null,\n    animatedHandlers: null,\n    firstExecution: true,\n    useAnimated: useAnimated,\n  }).current;\n\n  if (useAnimated !== preparedGesture.useAnimated) {\n    throw new Error(\n      'You cannot change whether you are using gesture or animatedGesture while the app is running'\n    );\n  }\n\n  if (preparedGesture.firstExecution) {\n    gestureConfig?.initialize?.();\n  }\n\n  if (useAnimated) {\n    // Whether animatedGesture or gesture is used shouldn't change\n    // during while an app is running\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    useAnimatedGesture(preparedGesture);\n  }\n\n  useEffect(() => {\n    firstRenderRef.current = true;\n    const viewTag = findNodeHandle(viewRef.current) as number;\n    attachHandlers({\n      preparedGesture,\n      gestureConfig,\n      gesture,\n      viewTag,\n      useAnimated,\n    });\n\n    return () => {\n      dropHandlers(preparedGesture);\n    };\n  }, []);\n\n  useEffect(() => {\n    if (!firstRenderRef.current) {\n      const viewTag = findNodeHandle(viewRef.current) as number;\n\n      if (needsToReattach(preparedGesture, gesture)) {\n        dropHandlers(preparedGesture);\n        attachHandlers({\n          preparedGesture,\n          gestureConfig,\n          gesture,\n          viewTag,\n          useAnimated,\n        });\n      } else {\n        updateHandlers(preparedGesture, gestureConfig, gesture);\n      }\n    } else {\n      firstRenderRef.current = false;\n    }\n  }, [props]);\n\n  if (useAnimated) {\n    return (\n      <AnimatedWrap\n        ref={viewRef}\n        onGestureHandlerEvent={preparedGesture.animatedEventHandler}>\n        {props.children}\n      </AnimatedWrap>\n    );\n  } else {\n    return <Wrap ref={viewRef}>{props.children}</Wrap>;\n  }\n};\n\nclass Wrap extends React.Component<{ onGestureHandlerEvent?: unknown }> {\n  render() {\n    // I don't think that fighting with types over such a simple function is worth it\n    // The only thing it does is add 'collapsable: false' to the child component\n    // to make sure it is in the native view hierarchy so the detector can find\n    // correct viewTag to attach to.\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const child: any = React.Children.only(this.props.children);\n\n    return React.cloneElement(\n      child,\n      { collapsable: false },\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      child.props.children\n    );\n  }\n}\n\nconst AnimatedWrap = Reanimated?.default?.createAnimatedComponent(Wrap) ?? Wrap;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,SAGEC,WAAW,EAEXC,aAAa,QACR,WAAW;AAClB,SAASC,UAAU,QAAqB,qBAAqB;AAC7D,SAASC,eAAe,EAAEC,iBAAiB,QAAQ,qBAAqB;AACxE,OAAOC,sBAAsB,MAAM,8BAA8B;AACjE,SACEC,kCAAkC,EAClCC,YAAY,EACZC,cAAc,QAIT,yBAAyB;AAChC,SACEC,mBAAmB,QAEd,uBAAuB;AAC9B,SAASC,wBAAwB,QAAQ,wBAAwB;AACjE,SAASC,6BAA6B,QAAQ,6BAA6B;AAC3E,SAASC,4BAA4B,QAAQ,4BAA4B;AACzE,SACEC,sBAAsB,EACtBC,kCAAkC,QAC7B,sBAAsB;AAC7B,SAASC,sBAAsB,QAAQ,sBAAsB;AAC7D,SAASC,KAAK,QAAQ,aAAa;AACnC,SAASC,SAAS,QAAQ,iBAAiB;AAG3C,MAAMC,aAAa,GAAG,CACpB,GAAGZ,kCAAkC,EACrC,GAAGS,sBAAsB,EACzB,GAAGF,sBAAsB,EACzB,GAAGC,kCAAkC,EACrC,GAAGF,4BAA4B,EAC/B,GAAGD,6BAA6B,EAChC,GAAGD,wBAAwB,CAC5B;AAYD,SAASS,mBAAmBA,CAACC,GAAe,EAAU;EACpD,IAAI,OAAOA,GAAG,KAAK,QAAQ,EAAE;IAC3B,OAAOA,GAAG;EACZ,CAAC,MAAM,IAAIA,GAAG,YAAYpB,WAAW,EAAE;IACrC,OAAOoB,GAAG,CAACC,UAAU;EACvB,CAAC,MAAM;IAAA,IAAAC,qBAAA,EAAAC,YAAA;IACL;IACA;IACA,QAAAD,qBAAA,IAAAC,YAAA,GAAOH,GAAG,CAACI,OAAO,cAAAD,YAAA,uBAAXA,YAAA,CAAaF,UAAU,cAAAC,qBAAA,cAAAA,qBAAA,GAAI,CAAC,CAAC;EACtC;AACF;AAEA,SAASG,uBAAuBA,CAACC,gBAA0C,EAAE;EAAA,IAAAC,qBAAA,EAAAC,sBAAA;EAC3E,QAAAD,qBAAA,GACED,gBAAgB,aAAhBA,gBAAgB,wBAAAE,sBAAA,GAAhBF,gBAAgB,CAAEG,GAAG,CAACV,mBAAmB,CAAC,cAAAS,sBAAA,uBAA1CA,sBAAA,CAA4CE,MAAM,CAAEC,GAAG,IAAKA,GAAG,GAAG,CAAC,CAAC,cAAAJ,qBAAA,cAAAA,qBAAA,GAAI,EAAE;AAE9E;AAEA,SAASK,YAAYA,CAACC,eAAuC,EAAE;EAC7D,KAAK,MAAMC,OAAO,IAAID,eAAe,CAACE,MAAM,EAAE;IAC5C9B,sBAAsB,CAAC+B,kBAAkB,CAACF,OAAO,CAACb,UAAU,CAAC;IAE7DjB,iBAAiB,CAAC8B,OAAO,CAACb,UAAU,CAAC;EACvC;AACF;AAUA,SAASgB,cAAcA,CAAAC,IAAA,EAME;EAAA,IAND;IACtBL,eAAe;IACfM,aAAa;IACbC,OAAO;IACPC,OAAO;IACPC;EACoB,CAAC,GAAAJ,IAAA;EACrB,IAAI,CAACL,eAAe,CAACU,cAAc,EAAE;IACnCJ,aAAa,aAAbA,aAAa,uBAAbA,aAAa,CAAEK,UAAU,CAAC,CAAC;EAC7B,CAAC,MAAM;IACLX,eAAe,CAACU,cAAc,GAAG,KAAK;EACxC;;EAEA;EACA;EACAE,YAAY,CAAC,MAAM;IACjBN,aAAa,aAAbA,aAAa,uBAAbA,aAAa,CAAEO,OAAO,CAAC,CAAC;EAC1B,CAAC,CAAC;EAEF,KAAK,MAAMZ,OAAO,IAAIM,OAAO,EAAE;IAC7BnC,sBAAsB,CAAC0C,oBAAoB,CACzCb,OAAO,CAACc,WAAW,EACnBd,OAAO,CAACb,UAAU,EAClBd,YAAY,CAAC2B,OAAO,CAACC,MAAM,EAAEjB,aAAa,CAC5C,CAAC;IAEDf,eAAe,CAAC+B,OAAO,CAACb,UAAU,EAAEa,OAAO,CAAC;;IAE5C;IACA;IACAW,YAAY,CAAC,MAAM;MACjB,IAAII,aAAuB,GAAG,EAAE;MAChC,IAAIf,OAAO,CAACC,MAAM,CAACc,aAAa,EAAE;QAChCA,aAAa,GAAGxB,uBAAuB,CAACS,OAAO,CAACC,MAAM,CAACc,aAAa,CAAC;MACvE;MAEA,IAAIC,gBAA0B,GAAG,EAAE;MACnC,IAAIhB,OAAO,CAACC,MAAM,CAACe,gBAAgB,EAAE;QACnCA,gBAAgB,GAAGzB,uBAAuB,CACxCS,OAAO,CAACC,MAAM,CAACe,gBACjB,CAAC;MACH;MAEA7C,sBAAsB,CAAC8C,oBAAoB,CACzCjB,OAAO,CAACb,UAAU,EAClBd,YAAY,CAAC2B,OAAO,CAACC,MAAM,EAAEjB,aAAa,EAAE;QAC1CkC,oBAAoB,EAAEF,gBAAgB;QACtCG,OAAO,EAAEJ;MACX,CAAC,CACH,CAAC;IACH,CAAC,CAAC;EACJ;EACAhB,eAAe,CAACE,MAAM,GAAGK,OAAO;EAEhC,KAAK,MAAMA,OAAO,IAAIP,eAAe,CAACE,MAAM,EAAE;IAC5C9B,sBAAsB,CAACiD,oBAAoB,CACzCd,OAAO,CAACnB,UAAU,EAClBoB,OAAO,EACP,CAACC,WAAW,CAAC;IACf,CAAC;EACH;;EAEA,IAAIT,eAAe,CAACsB,gBAAgB,EAAE;IACpCtB,eAAe,CAACsB,gBAAgB,CAACC,KAAK,GAAIhB,OAAO,CAACX,GAAG,CAClD4B,CAAC,IAAKA,CAAC,CAACC,QACX,CAA4D;EAC9D;AACF;AAEA,SAASC,cAAcA,CACrB1B,eAAuC,EACvCM,aAAwD,EACxDC,OAAsB,EACtB;EACAD,aAAa,aAAbA,aAAa,uBAAbA,aAAa,CAAEO,OAAO,CAAC,CAAC;EAExB,KAAK,IAAIc,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGpB,OAAO,CAACqB,MAAM,EAAED,CAAC,EAAE,EAAE;IACvC,MAAM1B,OAAO,GAAGD,eAAe,CAACE,MAAM,CAACyB,CAAC,CAAC;IAEzCpB,OAAO,CAACoB,CAAC,CAAC,CAACvC,UAAU,GAAGa,OAAO,CAACb,UAAU;IAC1CmB,OAAO,CAACoB,CAAC,CAAC,CAACF,QAAQ,CAACrC,UAAU,GAAGa,OAAO,CAACb,UAAU;EACrD;;EAEA;EACA;EACA;EACAwB,YAAY,CAAC,MAAM;IACjB,KAAK,IAAIe,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGpB,OAAO,CAACqB,MAAM,EAAED,CAAC,EAAE,EAAE;MACvC,MAAM1B,OAAO,GAAGD,eAAe,CAACE,MAAM,CAACyB,CAAC,CAAC;MAEzC1B,OAAO,CAACC,MAAM,GAAGK,OAAO,CAACoB,CAAC,CAAC,CAACzB,MAAM;MAClCD,OAAO,CAACwB,QAAQ,GAAGlB,OAAO,CAACoB,CAAC,CAAC,CAACF,QAAQ;MACtCxB,OAAO,CAACwB,QAAQ,CAACrC,UAAU,GAAGa,OAAO,CAACb,UAAU;MAEhD,MAAM4B,aAAa,GAAGxB,uBAAuB,CAC3CS,OAAO,CAACC,MAAM,CAACc,aACjB,CAAC;MAED,MAAMC,gBAAgB,GAAGzB,uBAAuB,CAC9CS,OAAO,CAACC,MAAM,CAACe,gBACjB,CAAC;MAED7C,sBAAsB,CAAC8C,oBAAoB,CACzCjB,OAAO,CAACb,UAAU,EAClBd,YAAY,CAAC2B,OAAO,CAACC,MAAM,EAAEjB,aAAa,EAAE;QAC1CkC,oBAAoB,EAAEF,gBAAgB;QACtCG,OAAO,EAAEJ;MACX,CAAC,CACH,CAAC;MAED9C,eAAe,CAAC+B,OAAO,CAACb,UAAU,EAAEa,OAAO,CAAC;IAC9C;IAEA,IAAID,eAAe,CAACsB,gBAAgB,EAAE;MACpCtB,eAAe,CAACsB,gBAAgB,CAACC,KAAK,GAAIvB,eAAe,CAACE,MAAM,CAACN,GAAG,CACjE4B,CAAC,IAAKA,CAAC,CAACC,QACX,CAA4D;IAC9D;EACF,CAAC,CAAC;AACJ;AAEA,SAASI,eAAeA,CACtB7B,eAAuC,EACvCO,OAAsB,EACtB;EACA,IAAIA,OAAO,CAACqB,MAAM,KAAK5B,eAAe,CAACE,MAAM,CAAC0B,MAAM,EAAE;IACpD,OAAO,IAAI;EACb;EACA,KAAK,IAAID,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGpB,OAAO,CAACqB,MAAM,EAAED,CAAC,EAAE,EAAE;IACvC,IAAIpB,OAAO,CAACoB,CAAC,CAAC,CAACZ,WAAW,KAAKf,eAAe,CAACE,MAAM,CAACyB,CAAC,CAAC,CAACZ,WAAW,EAAE;MACpE,OAAO,IAAI;IACb;EACF;EAEA,OAAO,KAAK;AACd;AAEA,SAASe,kBAAkBA,CAAC9B,eAAuC,EAAE;EACnE,IAAI,CAAC/B,UAAU,EAAE;IACf;EACF;EAEA,SAAS8D,kBAAkBA,CACzBC,KAAuE,EACrC;IAClC,SAAS;;IACT;IACA,OAAOA,KAAK,CAACC,QAAQ,IAAI,IAAI;EAC/B;EAEA,SAASC,YAAYA,CACnBF,KAAuE,EAC3C;IAC5B,SAAS;;IACT,OAAOA,KAAK,CAACG,SAAS,IAAI,IAAI;EAChC;EAEA,SAASC,UAAUA,CACjBC,IAAmB,EACnB9B,OAAkD,EAClD;IACA,SAAS;;IACT,QAAQ8B,IAAI;MACV,KAAKrE,aAAa,CAACsE,KAAK;QACtB,OAAO/B,OAAO,CAACgC,OAAO;MACxB,KAAKvE,aAAa,CAACwE,KAAK;QACtB,OAAOjC,OAAO,CAACkC,OAAO;MACxB,KAAKzE,aAAa,CAAC0E,MAAM;QACvB,OAAOnC,OAAO,CAACoC,QAAQ;MACzB,KAAK3E,aAAa,CAAC4E,MAAM;QACvB,OAAOrC,OAAO,CAACsC,QAAQ;MACzB,KAAK7E,aAAa,CAAC8E,GAAG;QACpB,OAAOvC,OAAO,CAACwC,KAAK;MACtB,KAAK/E,aAAa,CAACgF,QAAQ;QACzB,OAAOzC,OAAO,CAAC0C,UAAU;MAC3B,KAAKjF,aAAa,CAACkF,YAAY;QAC7B,OAAO3C,OAAO,CAAC4C,aAAa;MAC9B,KAAKnF,aAAa,CAACoF,YAAY;QAC7B,OAAO7C,OAAO,CAAC8C,aAAa;MAC9B,KAAKrF,aAAa,CAACsF,UAAU;QAC3B,OAAO/C,OAAO,CAACgD,WAAW;MAC5B,KAAKvF,aAAa,CAACwF,iBAAiB;QAClC,OAAOjD,OAAO,CAACkD,kBAAkB;IACrC;EACF;EAEA,SAASC,4BAA4BA,CAACvB,SAAoB,EAAiB;IACzE,SAAS;;IACT,QAAQA,SAAS;MACf,KAAKnD,SAAS,CAACkE,YAAY;QACzB,OAAOlF,aAAa,CAACkF,YAAY;MACnC,KAAKlE,SAAS,CAACoE,YAAY;QACzB,OAAOpF,aAAa,CAACoF,YAAY;MACnC,KAAKpE,SAAS,CAACsE,UAAU;QACvB,OAAOtF,aAAa,CAACsF,UAAU;MACjC,KAAKtE,SAAS,CAACwE,iBAAiB;QAC9B,OAAOxF,aAAa,CAACwF,iBAAiB;IAC1C;IACA,OAAOxF,aAAa,CAAC2F,SAAS;EAChC;EAEA,SAASC,UAAUA,CACjBvB,IAAmB,EACnB9B,OAAkD,EAClDyB,KAAuE,EAEvE;IACA,SAAS;;IACT,MAAM/B,OAAO,GAAGmC,UAAU,CAACC,IAAI,EAAE9B,OAAO,CAAC;IACzC,IAAIA,OAAO,CAACsD,SAAS,CAACxB,IAAI,CAAC,EAAE;MAAA,SAAAyB,IAAA,GAAAC,SAAA,CAAAnC,MAAA,EAJ1BoC,IAAI,OAAAC,KAAA,CAAAH,IAAA,OAAAA,IAAA,WAAAI,IAAA,MAAAA,IAAA,GAAAJ,IAAA,EAAAI,IAAA;QAAJF,IAAI,CAAAE,IAAA,QAAAH,SAAA,CAAAG,IAAA;MAAA;MAKL;MACA;MACAjE,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAG+B,KAAK,EAAE,GAAGgC,IAAI,CAAC;IAC3B,CAAC,MAAM,IAAI/D,OAAO,EAAE;MAClBkE,OAAO,CAACC,IAAI,CAAC,6CAA6C,CAAC;IAC7D;EACF;;EAEA;EACA;EACA;EACA,MAAMC,uBAAuB,GAAGpG,UAAU,CAACqG,cAAc,CAEvD,IAAI,CAAC;;EAEP;EACA,MAAMC,eAAe,GAAGtG,UAAU,CAACqG,cAAc,CAE/C,EAAE,CAAC;;EAEL;EACA,MAAME,gBAA2C,GAAG,EAAE;EAEtD,MAAMC,QAAQ,GACZzC,KAAuE,IACpE;IACH,SAAS;;IAET,MAAM0C,eAAe,GAAGL,uBAAuB,CAAC9C,KAAK;IACrD,IAAI,CAACmD,eAAe,EAAE;MACpB;IACF;IAEA,KAAK,IAAI/C,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG+C,eAAe,CAAC9C,MAAM,EAAED,CAAC,EAAE,EAAE;MAC/C,MAAMpB,OAAO,GAAGmE,eAAe,CAAC/C,CAAC,CAAC;MAElC,IAAIK,KAAK,CAAC5C,UAAU,KAAKmB,OAAO,CAACnB,UAAU,EAAE;QAC3C,IAAI2C,kBAAkB,CAACC,KAAK,CAAC,EAAE;UAC7B,IACEA,KAAK,CAACC,QAAQ,KAAKlD,KAAK,CAAC4F,YAAY,IACrC3C,KAAK,CAAC4C,KAAK,KAAK7F,KAAK,CAACuD,KAAK,EAC3B;YACAsB,UAAU,CAAC5F,aAAa,CAACsE,KAAK,EAAE/B,OAAO,EAAEyB,KAAK,CAAC;UACjD,CAAC,MAAM,IACL,CAACA,KAAK,CAACC,QAAQ,KAAKlD,KAAK,CAACuD,KAAK,IAC7BN,KAAK,CAACC,QAAQ,KAAKlD,KAAK,CAAC4F,YAAY,KACvC3C,KAAK,CAAC4C,KAAK,KAAK7F,KAAK,CAAC8F,MAAM,EAC5B;YACAjB,UAAU,CAAC5F,aAAa,CAACwE,KAAK,EAAEjC,OAAO,EAAEyB,KAAK,CAAC;YAC/CuC,eAAe,CAAChD,KAAK,CAAChB,OAAO,CAACnB,UAAU,CAAC,GAAG0F,SAAS;UACvD,CAAC,MAAM,IACL9C,KAAK,CAACC,QAAQ,KAAKD,KAAK,CAAC4C,KAAK,IAC9B5C,KAAK,CAAC4C,KAAK,KAAK7F,KAAK,CAAC+D,GAAG,EACzB;YACA,IAAId,KAAK,CAACC,QAAQ,KAAKlD,KAAK,CAAC8F,MAAM,EAAE;cACnCjB,UAAU,CAAC5F,aAAa,CAAC8E,GAAG,EAAEvC,OAAO,EAAEyB,KAAK,EAAE,IAAI,CAAC;YACrD;YACA4B,UAAU,CAAC5F,aAAa,CAACgF,QAAQ,EAAEzC,OAAO,EAAEyB,KAAK,EAAE,IAAI,CAAC;UAC1D,CAAC,MAAM,IACL,CAACA,KAAK,CAAC4C,KAAK,KAAK7F,KAAK,CAACgG,MAAM,IAAI/C,KAAK,CAAC4C,KAAK,KAAK7F,KAAK,CAACiG,SAAS,KAChEhD,KAAK,CAAC4C,KAAK,KAAK5C,KAAK,CAACC,QAAQ,EAC9B;YACA,IAAID,KAAK,CAACC,QAAQ,KAAKlD,KAAK,CAAC8F,MAAM,EAAE;cACnCjB,UAAU,CAAC5F,aAAa,CAAC8E,GAAG,EAAEvC,OAAO,EAAEyB,KAAK,EAAE,KAAK,CAAC;YACtD;YACA4B,UAAU,CAAC5F,aAAa,CAACgF,QAAQ,EAAEzC,OAAO,EAAEyB,KAAK,EAAE,KAAK,CAAC;UAC3D;QACF,CAAC,MAAM,IAAIE,YAAY,CAACF,KAAK,CAAC,EAAE;UAC9B,IAAI,CAACwC,gBAAgB,CAAC7C,CAAC,CAAC,EAAE;YACxB6C,gBAAgB,CAAC7C,CAAC,CAAC,GAAGnD,mBAAmB,CAACyG,MAAM,CAACjD,KAAK,CAAC5C,UAAU,CAAC;UACpE;UAEA,IAAI4C,KAAK,CAACG,SAAS,KAAKnD,SAAS,CAAC2F,YAAY,EAAE;YAC9Cf,UAAU,CACRF,4BAA4B,CAAC1B,KAAK,CAACG,SAAS,CAAC,EAC7C5B,OAAO,EACPyB,KAAK,EACLwC,gBAAgB,CAAC7C,CAAC,CACpB,CAAC;UACH;QACF,CAAC,MAAM;UACLiC,UAAU,CAAC5F,aAAa,CAAC0E,MAAM,EAAEnC,OAAO,EAAEyB,KAAK,CAAC;UAEhD,IAAIzB,OAAO,CAACsC,QAAQ,IAAItC,OAAO,CAAC2E,qBAAqB,EAAE;YAAA,IAAAC,qBAAA;YACrDvB,UAAU,CACR5F,aAAa,CAAC4E,MAAM,EACpBrC,OAAO,GAAA4E,qBAAA,GACP5E,OAAO,CAAC2E,qBAAqB,cAAAC,qBAAA,uBAA7BA,qBAAA,CAAAC,IAAA,CAAA7E,OAAO,EACLyB,KAAK,EACLuC,eAAe,CAAChD,KAAK,CAAChB,OAAO,CAACnB,UAAU,CAC1C,CACF,CAAC;YAEDmF,eAAe,CAAChD,KAAK,CAAChB,OAAO,CAACnB,UAAU,CAAC,GAAG4C,KAAK;UACnD;QACF;MACF;IACF;EACF,CAAC;;EAED;EACA,MAAMA,KAAK,GAAG/D,UAAU,CAACoH,QAAQ,CAC/BZ,QAAQ,EACR,CAAC,6BAA6B,EAAE,uBAAuB,CAAC,EACxD,IACF,CAAC;EAEDzE,eAAe,CAACsF,oBAAoB,GAAGtD,KAAK;EAC5ChC,eAAe,CAACsB,gBAAgB,GAAG+C,uBAAuB;AAC5D;AAKA,OAAO,MAAMkB,eAA8D,GACzEC,KAAK,IACF;EAAA,IAAAC,qBAAA,EAAAC,sBAAA;EACH,MAAMpF,aAAa,GAAGkF,KAAK,CAACjF,OAAO;EACnC,MAAMA,OAAO,IAAAkF,qBAAA,GAAGnF,aAAa,aAAbA,aAAa,wBAAAoF,sBAAA,GAAbpF,aAAa,CAAEqF,cAAc,cAAAD,sBAAA,uBAA7BA,sBAAA,CAAAN,IAAA,CAAA9E,aAAgC,CAAC,cAAAmF,qBAAA,cAAAA,qBAAA,GAAI,EAAE;EACvD,MAAMhF,WAAW,GACfF,OAAO,CAACqF,IAAI,CAAErF,OAAO,IACnBA,OAAO,CAACkB,QAAQ,CAACoC,SAAS,CAACgC,MAAM,CAAC,CAACC,IAAI,EAAEvG,OAAO,KAAKuG,IAAI,IAAIvG,OAAO,CACtE,CAAC,IAAI,IAAI;EACX,MAAMwG,OAAO,GAAGjI,MAAM,CAAC,IAAI,CAAC;EAC5B,MAAMkI,cAAc,GAAGlI,MAAM,CAAC,IAAI,CAAC;EAEnC,MAAMkC,eAAe,GAAGpC,KAAK,CAACE,MAAM,CAAyB;IAC3DoC,MAAM,EAAEK,OAAO;IACf+E,oBAAoB,EAAE,IAAI;IAC1BhE,gBAAgB,EAAE,IAAI;IACtBZ,cAAc,EAAE,IAAI;IACpBD,WAAW,EAAEA;EACf,CAAC,CAAC,CAAClB,OAAO;EAEV,IAAIkB,WAAW,KAAKT,eAAe,CAACS,WAAW,EAAE;IAC/C,MAAM,IAAIwF,KAAK,CACb,6FACF,CAAC;EACH;EAEA,IAAIjG,eAAe,CAACU,cAAc,EAAE;IAAA,IAAAwF,qBAAA;IAClC5F,aAAa,aAAbA,aAAa,wBAAA4F,qBAAA,GAAb5F,aAAa,CAAEK,UAAU,cAAAuF,qBAAA,uBAAzBA,qBAAA,CAAAd,IAAA,CAAA9E,aAA4B,CAAC;EAC/B;EAEA,IAAIG,WAAW,EAAE;IACf;IACA;IACA;IACAqB,kBAAkB,CAAC9B,eAAe,CAAC;EACrC;EAEAnC,SAAS,CAAC,MAAM;IACdmI,cAAc,CAACzG,OAAO,GAAG,IAAI;IAC7B,MAAMiB,OAAO,GAAGjC,cAAc,CAACwH,OAAO,CAACxG,OAAO,CAAW;IACzDa,cAAc,CAAC;MACbJ,eAAe;MACfM,aAAa;MACbC,OAAO;MACPC,OAAO;MACPC;IACF,CAAC,CAAC;IAEF,OAAO,MAAM;MACXV,YAAY,CAACC,eAAe,CAAC;IAC/B,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAENnC,SAAS,CAAC,MAAM;IACd,IAAI,CAACmI,cAAc,CAACzG,OAAO,EAAE;MAC3B,MAAMiB,OAAO,GAAGjC,cAAc,CAACwH,OAAO,CAACxG,OAAO,CAAW;MAEzD,IAAIsC,eAAe,CAAC7B,eAAe,EAAEO,OAAO,CAAC,EAAE;QAC7CR,YAAY,CAACC,eAAe,CAAC;QAC7BI,cAAc,CAAC;UACbJ,eAAe;UACfM,aAAa;UACbC,OAAO;UACPC,OAAO;UACPC;QACF,CAAC,CAAC;MACJ,CAAC,MAAM;QACLiB,cAAc,CAAC1B,eAAe,EAAEM,aAAa,EAAEC,OAAO,CAAC;MACzD;IACF,CAAC,MAAM;MACLyF,cAAc,CAACzG,OAAO,GAAG,KAAK;IAChC;EACF,CAAC,EAAE,CAACiG,KAAK,CAAC,CAAC;EAEX,IAAI/E,WAAW,EAAE;IACf,oBACE7C,KAAA,CAAAuI,aAAA,CAACC,YAAY;MACXjH,GAAG,EAAE4G,OAAQ;MACbM,qBAAqB,EAAErG,eAAe,CAACsF;IAAqB,GAC3DE,KAAK,CAACc,QACK,CAAC;EAEnB,CAAC,MAAM;IACL,oBAAO1I,KAAA,CAAAuI,aAAA,CAACI,IAAI;MAACpH,GAAG,EAAE4G;IAAQ,GAAEP,KAAK,CAACc,QAAe,CAAC;EACpD;AACF,CAAC;AAED,MAAMC,IAAI,SAAS3I,KAAK,CAAC4I,SAAS,CAAsC;EACtEC,MAAMA,CAAA,EAAG;IACP;IACA;IACA;IACA;IACA;IACA,MAAMC,KAAU,GAAG9I,KAAK,CAAC+I,QAAQ,CAACC,IAAI,CAAC,IAAI,CAACpB,KAAK,CAACc,QAAQ,CAAC;IAE3D,oBAAO1I,KAAK,CAACiJ,YAAY,CACvBH,KAAK,EACL;MAAEI,WAAW,EAAE;IAAM,CAAC;IACtB;IACAJ,KAAK,CAAClB,KAAK,CAACc,QACd,CAAC;EACH;AACF;AAEA,MAAMF,YAAY,IAAAW,qBAAA,GAAG9I,UAAU,aAAVA,UAAU,wBAAA+I,mBAAA,GAAV/I,UAAU,CAAEgJ,OAAO,cAAAD,mBAAA,uBAAnBA,mBAAA,CAAqBE,uBAAuB,CAACX,IAAI,CAAC,cAAAQ,qBAAA,cAAAA,qBAAA,GAAIR,IAAI"}