{"version":3,"names":["BaseGesture","Gesture","extendRelation","currentRelation","extendWith","undefined","ComposedGesture","constructor","_defineProperty","_len","arguments","length","gestures","Array","_key","prepareSingleGesture","gesture","simultaneousGestures","requireGesturesToFail","newConfig","config","simultaneousWith","requireToFail","prepare","initialize","toGestureArray","flatMap","SimultaneousGesture","simultaneousArray","concat","ExclusiveGesture","gestureArrays","map","i"],"sources":["gestureComposition.ts"],"sourcesContent":["import { BaseGesture, Gesture, GestureRef, GestureType } from './gesture';\n\nfunction extendRelation(\n  currentRelation: GestureRef[] | undefined,\n  extendWith: GestureType[]\n) {\n  if (currentRelation === undefined) {\n    return [...extendWith];\n  } else {\n    return [...currentRelation, ...extendWith];\n  }\n}\n\nexport class ComposedGesture extends Gesture {\n  protected gestures: Gesture[] = [];\n  protected simultaneousGestures: GestureType[] = [];\n  protected requireGesturesToFail: GestureType[] = [];\n\n  constructor(...gestures: Gesture[]) {\n    super();\n    this.gestures = gestures;\n  }\n\n  protected prepareSingleGesture(\n    gesture: Gesture,\n    simultaneousGestures: GestureType[],\n    requireGesturesToFail: GestureType[]\n  ) {\n    if (gesture instanceof BaseGesture) {\n      const newConfig = { ...gesture.config };\n\n      newConfig.simultaneousWith = extendRelation(\n        newConfig.simultaneousWith,\n        simultaneousGestures\n      );\n      newConfig.requireToFail = extendRelation(\n        newConfig.requireToFail,\n        requireGesturesToFail\n      );\n\n      gesture.config = newConfig;\n    } else if (gesture instanceof ComposedGesture) {\n      gesture.simultaneousGestures = simultaneousGestures;\n      gesture.requireGesturesToFail = requireGesturesToFail;\n      gesture.prepare();\n    }\n  }\n\n  prepare() {\n    for (const gesture of this.gestures) {\n      this.prepareSingleGesture(\n        gesture,\n        this.simultaneousGestures,\n        this.requireGesturesToFail\n      );\n    }\n  }\n\n  initialize() {\n    for (const gesture of this.gestures) {\n      gesture.initialize();\n    }\n  }\n\n  toGestureArray(): GestureType[] {\n    return this.gestures.flatMap((gesture) => gesture.toGestureArray());\n  }\n}\n\nexport class SimultaneousGesture extends ComposedGesture {\n  prepare() {\n    const simultaneousArray = this.gestures\n      .flatMap((gesture) => gesture.toGestureArray())\n      .concat(this.simultaneousGestures);\n\n    for (const gesture of this.gestures) {\n      this.prepareSingleGesture(\n        gesture,\n        simultaneousArray,\n        this.requireGesturesToFail\n      );\n    }\n  }\n}\n\nexport class ExclusiveGesture extends ComposedGesture {\n  prepare() {\n    const gestureArrays = this.gestures.map((gesture) =>\n      gesture.toGestureArray()\n    );\n\n    let requireToFail: GestureType[] = [];\n\n    for (let i = 0; i < this.gestures.length; i++) {\n      this.prepareSingleGesture(\n        this.gestures[i],\n        this.simultaneousGestures,\n        this.requireGesturesToFail.concat(requireToFail)\n      );\n\n      requireToFail = requireToFail.concat(gestureArrays[i]);\n    }\n  }\n}\n\nexport type ComposedGestureType = InstanceType<typeof ComposedGesture>;\nexport type RaceGestureType = ComposedGestureType;\nexport type SimultaneousGestureType = InstanceType<typeof SimultaneousGesture>;\nexport type ExclusiveGestureType = InstanceType<typeof ExclusiveGesture>;\n"],"mappings":";;;AAAA,SAASA,WAAW,EAAEC,OAAO,QAAiC,WAAW;AAEzE,SAASC,cAAcA,CACrBC,eAAyC,EACzCC,UAAyB,EACzB;EACA,IAAID,eAAe,KAAKE,SAAS,EAAE;IACjC,OAAO,CAAC,GAAGD,UAAU,CAAC;EACxB,CAAC,MAAM;IACL,OAAO,CAAC,GAAGD,eAAe,EAAE,GAAGC,UAAU,CAAC;EAC5C;AACF;AAEA,OAAO,MAAME,eAAe,SAASL,OAAO,CAAC;EAK3CM,WAAWA,CAAA,EAAyB;IAClC,KAAK,CAAC,CAAC;IAACC,eAAA,mBALsB,EAAE;IAAAA,eAAA,+BACc,EAAE;IAAAA,eAAA,gCACD,EAAE;IAAA,SAAAC,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAEpCC,QAAQ,OAAAC,KAAA,CAAAJ,IAAA,GAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;MAARF,QAAQ,CAAAE,IAAA,IAAAJ,SAAA,CAAAI,IAAA;IAAA;IAErB,IAAI,CAACF,QAAQ,GAAGA,QAAQ;EAC1B;EAEUG,oBAAoBA,CAC5BC,OAAgB,EAChBC,oBAAmC,EACnCC,qBAAoC,EACpC;IACA,IAAIF,OAAO,YAAYhB,WAAW,EAAE;MAClC,MAAMmB,SAAS,GAAG;QAAE,GAAGH,OAAO,CAACI;MAAO,CAAC;MAEvCD,SAAS,CAACE,gBAAgB,GAAGnB,cAAc,CACzCiB,SAAS,CAACE,gBAAgB,EAC1BJ,oBACF,CAAC;MACDE,SAAS,CAACG,aAAa,GAAGpB,cAAc,CACtCiB,SAAS,CAACG,aAAa,EACvBJ,qBACF,CAAC;MAEDF,OAAO,CAACI,MAAM,GAAGD,SAAS;IAC5B,CAAC,MAAM,IAAIH,OAAO,YAAYV,eAAe,EAAE;MAC7CU,OAAO,CAACC,oBAAoB,GAAGA,oBAAoB;MACnDD,OAAO,CAACE,qBAAqB,GAAGA,qBAAqB;MACrDF,OAAO,CAACO,OAAO,CAAC,CAAC;IACnB;EACF;EAEAA,OAAOA,CAAA,EAAG;IACR,KAAK,MAAMP,OAAO,IAAI,IAAI,CAACJ,QAAQ,EAAE;MACnC,IAAI,CAACG,oBAAoB,CACvBC,OAAO,EACP,IAAI,CAACC,oBAAoB,EACzB,IAAI,CAACC,qBACP,CAAC;IACH;EACF;EAEAM,UAAUA,CAAA,EAAG;IACX,KAAK,MAAMR,OAAO,IAAI,IAAI,CAACJ,QAAQ,EAAE;MACnCI,OAAO,CAACQ,UAAU,CAAC,CAAC;IACtB;EACF;EAEAC,cAAcA,CAAA,EAAkB;IAC9B,OAAO,IAAI,CAACb,QAAQ,CAACc,OAAO,CAAEV,OAAO,IAAKA,OAAO,CAACS,cAAc,CAAC,CAAC,CAAC;EACrE;AACF;AAEA,OAAO,MAAME,mBAAmB,SAASrB,eAAe,CAAC;EACvDiB,OAAOA,CAAA,EAAG;IACR,MAAMK,iBAAiB,GAAG,IAAI,CAAChB,QAAQ,CACpCc,OAAO,CAAEV,OAAO,IAAKA,OAAO,CAACS,cAAc,CAAC,CAAC,CAAC,CAC9CI,MAAM,CAAC,IAAI,CAACZ,oBAAoB,CAAC;IAEpC,KAAK,MAAMD,OAAO,IAAI,IAAI,CAACJ,QAAQ,EAAE;MACnC,IAAI,CAACG,oBAAoB,CACvBC,OAAO,EACPY,iBAAiB,EACjB,IAAI,CAACV,qBACP,CAAC;IACH;EACF;AACF;AAEA,OAAO,MAAMY,gBAAgB,SAASxB,eAAe,CAAC;EACpDiB,OAAOA,CAAA,EAAG;IACR,MAAMQ,aAAa,GAAG,IAAI,CAACnB,QAAQ,CAACoB,GAAG,CAAEhB,OAAO,IAC9CA,OAAO,CAACS,cAAc,CAAC,CACzB,CAAC;IAED,IAAIH,aAA4B,GAAG,EAAE;IAErC,KAAK,IAAIW,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACrB,QAAQ,CAACD,MAAM,EAAEsB,CAAC,EAAE,EAAE;MAC7C,IAAI,CAAClB,oBAAoB,CACvB,IAAI,CAACH,QAAQ,CAACqB,CAAC,CAAC,EAChB,IAAI,CAAChB,oBAAoB,EACzB,IAAI,CAACC,qBAAqB,CAACW,MAAM,CAACP,aAAa,CACjD,CAAC;MAEDA,aAAa,GAAGA,aAAa,CAACO,MAAM,CAACE,aAAa,CAACE,CAAC,CAAC,CAAC;IACxD;EACF;AACF"}