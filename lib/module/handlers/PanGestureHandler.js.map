{"version":3,"names":["createHandler","baseGestureHandlerProps","panGestureHandlerProps","panGestureHandlerCustomNativeProps","PanGestureHandler","name","allowedProps","config","transformProps","managePanProps","customNativeProps","validatePanGestureHandlerProps","props","Array","isArray","activeOffsetX","Error","activeOffsetY","failOffsetX","failOffsetY","minDist","transformPanGestureHandlerProps","res","undefined","activeOffsetXStart","activeOffsetXEnd","activeOffsetYStart","activeOffsetYEnd","failOffsetXStart","failOffsetXEnd","failOffsetYStart","failOffsetYEnd","__DEV__"],"sources":["PanGestureHandler.ts"],"sourcesContent":["import createHandler from './createHandler';\nimport {\n  BaseGestureHandlerProps,\n  baseGestureHandlerProps,\n} from './gestureHandlerCommon';\n\nexport const panGestureHandlerProps = [\n  'activeOffsetY',\n  'activeOffsetX',\n  'failOffsetY',\n  'failOffsetX',\n  'minDist',\n  'minVelocity',\n  'minVelocityX',\n  'minVelocityY',\n  'minPointers',\n  'maxPointers',\n  'avgTouches',\n  'enableTrackpadTwoFingerGesture',\n] as const;\n\nexport const panGestureHandlerCustomNativeProps = [\n  'activeOffsetYStart',\n  'activeOffsetYEnd',\n  'activeOffsetXStart',\n  'activeOffsetXEnd',\n  'failOffsetYStart',\n  'failOffsetYEnd',\n  'failOffsetXStart',\n  'failOffsetXEnd',\n] as const;\n\nexport type PanGestureHandlerEventPayload = {\n  /**\n   * X coordinate of the current position of the pointer (finger or a leading\n   * pointer when there are multiple fingers placed) relative to the view\n   * attached to the handler. Expressed in point units.\n   */\n  x: number;\n\n  /**\n   * Y coordinate of the current position of the pointer (finger or a leading\n   * pointer when there are multiple fingers placed) relative to the view\n   * attached to the handler. Expressed in point units.\n   */\n  y: number;\n\n  /**\n   * X coordinate of the current position of the pointer (finger or a leading\n   * pointer when there are multiple fingers placed) relative to the window.\n   * The value is expressed in point units. It is recommended to use it instead\n   * of `x` in cases when the original view can be transformed as an effect of\n   * the gesture.\n   */\n  absoluteX: number;\n\n  /**\n   * Y coordinate of the current position of the pointer (finger or a leading\n   * pointer when there are multiple fingers placed) relative to the window.\n   * The value is expressed in point units. It is recommended to use it instead\n   * of `y` in cases when the original view can be transformed as an\n   * effect of the gesture.\n   */\n  absoluteY: number;\n\n  /**\n   * Translation of the pan gesture along X axis accumulated over the time of\n   * the gesture. The value is expressed in the point units.\n   */\n  translationX: number;\n\n  /**\n   * Translation of the pan gesture along Y axis accumulated over the time of\n   * the gesture. The value is expressed in the point units.\n   */\n  translationY: number;\n\n  /**\n   * Velocity of the pan gesture along the X axis in the current moment. The\n   * value is expressed in point units per second.\n   */\n  velocityX: number;\n\n  /**\n   * Velocity of the pan gesture along the Y axis in the current moment. The\n   * value is expressed in point units per second.\n   */\n  velocityY: number;\n};\n\ninterface CommonPanProperties {\n  /**\n   * Minimum distance the finger (or multiple finger) need to travel before the\n   * handler activates. Expressed in points.\n   */\n  minDist?: number;\n\n  /**\n   * Android only.\n   */\n  avgTouches?: boolean;\n\n  /**\n   * Enables two-finger gestures on supported devices, for example iPads with\n   * trackpads. If not enabled the gesture will require click + drag, with\n   * enableTrackpadTwoFingerGesture swiping with two fingers will also trigger\n   * the gesture.\n   */\n  enableTrackpadTwoFingerGesture?: boolean;\n\n  /**\n   * A number of fingers that is required to be placed before handler can\n   * activate. Should be a higher or equal to 0 integer.\n   */\n  minPointers?: number;\n\n  /**\n   * When the given number of fingers is placed on the screen and handler hasn't\n   * yet activated it will fail recognizing the gesture. Should be a higher or\n   * equal to 0 integer.\n   */\n  maxPointers?: number;\n\n  minVelocity?: number;\n  minVelocityX?: number;\n  minVelocityY?: number;\n}\n\nexport interface PanGestureConfig extends CommonPanProperties {\n  activeOffsetYStart?: number;\n  activeOffsetYEnd?: number;\n  activeOffsetXStart?: number;\n  activeOffsetXEnd?: number;\n  failOffsetYStart?: number;\n  failOffsetYEnd?: number;\n  failOffsetXStart?: number;\n  failOffsetXEnd?: number;\n}\n\nexport interface PanGestureHandlerProps\n  extends BaseGestureHandlerProps<PanGestureHandlerEventPayload>,\n    CommonPanProperties {\n  /**\n   * Range along X axis (in points) where fingers travels without activation of\n   * handler. Moving outside of this range implies activation of handler. Range\n   * can be given as an array or a single number. If range is set as an array,\n   * first value must be lower or equal to 0, a the second one higher or equal\n   * to 0. If only one number `p` is given a range of `(-inf, p)` will be used\n   * if `p` is higher or equal to 0 and `(-p, inf)` otherwise.\n   */\n  activeOffsetY?: number | number[];\n\n  /**\n   * Range along X axis (in points) where fingers travels without activation of\n   * handler. Moving outside of this range implies activation of handler. Range\n   * can be given as an array or a single number. If range is set as an array,\n   * first value must be lower or equal to 0, a the second one higher or equal\n   * to 0. If only one number `p` is given a range of `(-inf, p)` will be used\n   * if `p` is higher or equal to 0 and `(-p, inf)` otherwise.\n   */\n  activeOffsetX?: number | number[];\n\n  /**\n   * When the finger moves outside this range (in points) along Y axis and\n   * handler hasn't yet activated it will fail recognizing the gesture. Range\n   * can be given as an array or a single number. If range is set as an array,\n   * first value must be lower or equal to 0, a the second one higher or equal\n   * to 0. If only one number `p` is given a range of `(-inf, p)` will be used\n   * if `p` is higher or equal to 0 and `(-p, inf)` otherwise.\n   */\n  failOffsetY?: number | number[];\n\n  /**\n   * When the finger moves outside this range (in points) along X axis and\n   * handler hasn't yet activated it will fail recognizing the gesture. Range\n   * can be given as an array or a single number. If range is set as an array,\n   * first value must be lower or equal to 0, a the second one higher or equal\n   * to 0. If only one number `p` is given a range of `(-inf, p)` will be used\n   * if `p` is higher or equal to 0 and `(-p, inf)` otherwise.\n   */\n  failOffsetX?: number | number[];\n}\n\nexport type PanGestureHandler = typeof PanGestureHandler;\n// eslint-disable-next-line @typescript-eslint/no-redeclare -- backward compatibility; see description on the top of gestureHandlerCommon.ts file\nexport const PanGestureHandler = createHandler<\n  PanGestureHandlerProps,\n  PanGestureHandlerEventPayload\n>({\n  name: 'PanGestureHandler',\n  allowedProps: [\n    ...baseGestureHandlerProps,\n    ...panGestureHandlerProps,\n  ] as const,\n  config: {},\n  transformProps: managePanProps,\n  customNativeProps: panGestureHandlerCustomNativeProps,\n});\n\nfunction validatePanGestureHandlerProps(props: PanGestureHandlerProps) {\n  if (\n    Array.isArray(props.activeOffsetX) &&\n    (props.activeOffsetX[0] > 0 || props.activeOffsetX[1] < 0)\n  ) {\n    throw new Error(\n      `First element of activeOffsetX should be negative, a the second one should be positive`\n    );\n  }\n\n  if (\n    Array.isArray(props.activeOffsetY) &&\n    (props.activeOffsetY[0] > 0 || props.activeOffsetY[1] < 0)\n  ) {\n    throw new Error(\n      `First element of activeOffsetY should be negative, a the second one should be positive`\n    );\n  }\n\n  if (\n    Array.isArray(props.failOffsetX) &&\n    (props.failOffsetX[0] > 0 || props.failOffsetX[1] < 0)\n  ) {\n    throw new Error(\n      `First element of failOffsetX should be negative, a the second one should be positive`\n    );\n  }\n\n  if (\n    Array.isArray(props.failOffsetY) &&\n    (props.failOffsetY[0] > 0 || props.failOffsetY[1] < 0)\n  ) {\n    throw new Error(\n      `First element of failOffsetY should be negative, a the second one should be positive`\n    );\n  }\n\n  if (props.minDist && (props.failOffsetX || props.failOffsetY)) {\n    throw new Error(\n      `It is not supported to use minDist with failOffsetX or failOffsetY, use activeOffsetX and activeOffsetY instead`\n    );\n  }\n\n  if (props.minDist && (props.activeOffsetX || props.activeOffsetY)) {\n    throw new Error(\n      `It is not supported to use minDist with activeOffsetX or activeOffsetY`\n    );\n  }\n}\n\nfunction transformPanGestureHandlerProps(props: PanGestureHandlerProps) {\n  type InternalPanGHKeys =\n    | 'activeOffsetXStart'\n    | 'activeOffsetXEnd'\n    | 'failOffsetXStart'\n    | 'failOffsetXEnd'\n    | 'activeOffsetYStart'\n    | 'activeOffsetYEnd'\n    | 'failOffsetYStart'\n    | 'failOffsetYEnd';\n  type PanGestureHandlerInternalProps = PanGestureHandlerProps &\n    Partial<Record<InternalPanGHKeys, number>>;\n\n  const res: PanGestureHandlerInternalProps = { ...props };\n\n  if (props.activeOffsetX !== undefined) {\n    delete res.activeOffsetX;\n    if (Array.isArray(props.activeOffsetX)) {\n      res.activeOffsetXStart = props.activeOffsetX[0];\n      res.activeOffsetXEnd = props.activeOffsetX[1];\n    } else if (props.activeOffsetX < 0) {\n      res.activeOffsetXStart = props.activeOffsetX;\n    } else {\n      res.activeOffsetXEnd = props.activeOffsetX;\n    }\n  }\n\n  if (props.activeOffsetY !== undefined) {\n    delete res.activeOffsetY;\n    if (Array.isArray(props.activeOffsetY)) {\n      res.activeOffsetYStart = props.activeOffsetY[0];\n      res.activeOffsetYEnd = props.activeOffsetY[1];\n    } else if (props.activeOffsetY < 0) {\n      res.activeOffsetYStart = props.activeOffsetY;\n    } else {\n      res.activeOffsetYEnd = props.activeOffsetY;\n    }\n  }\n\n  if (props.failOffsetX !== undefined) {\n    delete res.failOffsetX;\n    if (Array.isArray(props.failOffsetX)) {\n      res.failOffsetXStart = props.failOffsetX[0];\n      res.failOffsetXEnd = props.failOffsetX[1];\n    } else if (props.failOffsetX < 0) {\n      res.failOffsetXStart = props.failOffsetX;\n    } else {\n      res.failOffsetXEnd = props.failOffsetX;\n    }\n  }\n\n  if (props.failOffsetY !== undefined) {\n    delete res.failOffsetY;\n    if (Array.isArray(props.failOffsetY)) {\n      res.failOffsetYStart = props.failOffsetY[0];\n      res.failOffsetYEnd = props.failOffsetY[1];\n    } else if (props.failOffsetY < 0) {\n      res.failOffsetYStart = props.failOffsetY;\n    } else {\n      res.failOffsetYEnd = props.failOffsetY;\n    }\n  }\n\n  return res;\n}\n\nexport function managePanProps(props: PanGestureHandlerProps) {\n  if (__DEV__) {\n    validatePanGestureHandlerProps(props);\n  }\n  return transformPanGestureHandlerProps(props);\n}\n"],"mappings":"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"}