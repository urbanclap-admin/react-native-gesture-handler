{"version":3,"names":["React","Animated","Platform","processColor","StyleSheet","createNativeWrapper","GestureHandlerButton","State","RawButton","shouldCancelWhenOutside","shouldActivateOnStart","BaseButton","Component","constructor","props","_defineProperty","_ref","nativeEvent","state","oldState","pointerInside","active","ACTIVE","lastActive","onActiveStateChange","CANCELLED","onPress","e","_this$props$onHandler","_this$props","onHandlerStateChange","call","handleEvent","_this$props$onGesture","_this$props2","onGestureEvent","render","rippleColor","rest","createElement","_extends","AnimatedBaseButton","createAnimatedComponent","btnStyles","create","underlay","position","left","right","bottom","top","RectButton","_this$props$onActiveS","_this$props3","OS","opacity","setValue","activeOpacity","Value","children","style","resolvedStyle","flatten","View","backgroundColor","underlayColor","borderRadius","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","BorderlessButton","_this$props$onActiveS2","_this$props4","borderless","default","PureNativeButton"],"sources":["GestureButtons.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  Platform,\n  processColor,\n  StyleSheet,\n  StyleProp,\n  ViewStyle,\n} from 'react-native';\n\nimport createNativeWrapper from '../handlers/createNativeWrapper';\nimport GestureHandlerButton from './GestureHandlerButton';\nimport { State } from '../State';\n\nimport {\n  GestureEvent,\n  HandlerStateChangeEvent,\n} from '../handlers/gestureHandlerCommon';\nimport {\n  NativeViewGestureHandlerPayload,\n  NativeViewGestureHandlerProps,\n} from '../handlers/NativeViewGestureHandler';\n\nexport interface RawButtonProps extends NativeViewGestureHandlerProps {\n  /**\n   * Defines if more than one button could be pressed simultaneously. By default\n   * set true.\n   */\n  exclusive?: boolean;\n  // TODO: we should transform props in `createNativeWrapper`\n\n  /**\n   * Android only.\n   *\n   * Defines color of native ripple animation used since API level 21.\n   */\n  rippleColor?: any; // it was present in BaseButtonProps before but is used here in code\n}\n\nexport interface BaseButtonProps extends RawButtonProps {\n  /**\n   * Called when the button gets pressed (analogous to `onPress` in\n   * `TouchableHighlight` from RN core).\n   */\n  onPress?: (pointerInside: boolean) => void;\n\n  /**\n   * Called when button changes from inactive to active and vice versa. It\n   * passes active state as a boolean variable as a first parameter for that\n   * method.\n   */\n  onActiveStateChange?: (active: boolean) => void;\n  style?: StyleProp<ViewStyle>;\n  testID?: string;\n}\n\nexport interface RectButtonProps extends BaseButtonProps {\n  /**\n   * Background color that will be dimmed when button is in active state.\n   */\n  underlayColor?: string;\n\n  /**\n   * iOS only.\n   *\n   * Opacity applied to the underlay when button is in active state.\n   */\n  activeOpacity?: number;\n}\n\nexport interface BorderlessButtonProps extends BaseButtonProps {\n  /**\n   * Android only.\n   *\n   * Set this to false if you want the ripple animation to render only within view bounds.\n   */\n  borderless?: boolean;\n\n  /**\n   * iOS only.\n   *\n   * Opacity applied to the button when it is in an active state.\n   */\n  activeOpacity?: number;\n}\n\nexport const RawButton = createNativeWrapper(GestureHandlerButton, {\n  shouldCancelWhenOutside: false,\n  shouldActivateOnStart: false,\n});\n\nexport class BaseButton extends React.Component<BaseButtonProps> {\n  private lastActive: boolean;\n\n  constructor(props: BaseButtonProps) {\n    super(props);\n    this.lastActive = false;\n  }\n\n  private handleEvent = ({\n    nativeEvent,\n  }: HandlerStateChangeEvent<NativeViewGestureHandlerPayload>) => {\n    const { state, oldState, pointerInside } = nativeEvent;\n    const active = pointerInside && state === State.ACTIVE;\n\n    if (active !== this.lastActive && this.props.onActiveStateChange) {\n      this.props.onActiveStateChange(active);\n    }\n\n    if (\n      oldState === State.ACTIVE &&\n      state !== State.CANCELLED &&\n      this.lastActive &&\n      this.props.onPress\n    ) {\n      this.props.onPress(active);\n    }\n\n    this.lastActive = active;\n  };\n\n  // Normally, the parent would execute it's handler first, then forward the\n  // event to listeners. However, here our handler is virtually only forwarding\n  // events to listeners, so we reverse the order to keep the proper order of\n  // the callbacks (from \"raw\" ones to \"processed\").\n  private onHandlerStateChange = (\n    e: HandlerStateChangeEvent<NativeViewGestureHandlerPayload>\n  ) => {\n    this.props.onHandlerStateChange?.(e);\n    this.handleEvent(e);\n  };\n\n  private onGestureEvent = (\n    e: GestureEvent<NativeViewGestureHandlerPayload>\n  ) => {\n    this.props.onGestureEvent?.(e);\n    this.handleEvent(\n      e as HandlerStateChangeEvent<NativeViewGestureHandlerPayload>\n    ); // TODO: maybe it is not correct\n  };\n\n  render() {\n    const { rippleColor, ...rest } = this.props;\n\n    return (\n      <RawButton\n        rippleColor={processColor(rippleColor)}\n        {...rest}\n        onGestureEvent={this.onGestureEvent}\n        onHandlerStateChange={this.onHandlerStateChange}\n      />\n    );\n  }\n}\n\nconst AnimatedBaseButton = Animated.createAnimatedComponent(BaseButton);\n\nconst btnStyles = StyleSheet.create({\n  underlay: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    bottom: 0,\n    top: 0,\n  },\n});\n\nexport class RectButton extends React.Component<RectButtonProps> {\n  static defaultProps = {\n    activeOpacity: 0.105,\n    underlayColor: 'black',\n  };\n\n  private opacity: Animated.Value;\n\n  constructor(props: RectButtonProps) {\n    super(props);\n    this.opacity = new Animated.Value(0);\n  }\n\n  private onActiveStateChange = (active: boolean) => {\n    if (Platform.OS !== 'android') {\n      this.opacity.setValue(active ? this.props.activeOpacity! : 0);\n    }\n\n    this.props.onActiveStateChange?.(active);\n  };\n\n  render() {\n    const { children, style, ...rest } = this.props;\n\n    const resolvedStyle = StyleSheet.flatten(style ?? {});\n\n    return (\n      <BaseButton\n        {...rest}\n        style={resolvedStyle}\n        onActiveStateChange={this.onActiveStateChange}>\n        <Animated.View\n          style={[\n            btnStyles.underlay,\n            {\n              opacity: this.opacity,\n              backgroundColor: this.props.underlayColor,\n              borderRadius: resolvedStyle.borderRadius,\n              borderTopLeftRadius: resolvedStyle.borderTopLeftRadius,\n              borderTopRightRadius: resolvedStyle.borderTopRightRadius,\n              borderBottomLeftRadius: resolvedStyle.borderBottomLeftRadius,\n              borderBottomRightRadius: resolvedStyle.borderBottomRightRadius,\n            },\n          ]}\n        />\n        {children}\n      </BaseButton>\n    );\n  }\n}\n\nexport class BorderlessButton extends React.Component<BorderlessButtonProps> {\n  static defaultProps = {\n    activeOpacity: 0.3,\n    borderless: true,\n  };\n\n  private opacity: Animated.Value;\n\n  constructor(props: BorderlessButtonProps) {\n    super(props);\n    this.opacity = new Animated.Value(1);\n  }\n\n  private onActiveStateChange = (active: boolean) => {\n    if (Platform.OS !== 'android') {\n      this.opacity.setValue(active ? this.props.activeOpacity! : 1);\n    }\n\n    this.props.onActiveStateChange?.(active);\n  };\n\n  render() {\n    const { children, style, ...rest } = this.props;\n\n    return (\n      <AnimatedBaseButton\n        {...rest}\n        onActiveStateChange={this.onActiveStateChange}\n        style={[style, Platform.OS === 'ios' && { opacity: this.opacity }]}>\n        {children}\n      </AnimatedBaseButton>\n    );\n  }\n}\n\nexport { default as PureNativeButton } from './GestureHandlerButton';\n"],"mappings":"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"}