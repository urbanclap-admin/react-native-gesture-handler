{"version":3,"names":["_handlersRegistry","require","_defineProperty","obj","key","value","_toPropertyKey","Object","defineProperty","enumerable","configurable","writable","arg","_toPrimitive","String","input","hint","prim","Symbol","toPrimitive","undefined","res","call","TypeError","Number","CALLBACK_TYPE","UNDEFINED","BEGAN","START","UPDATE","CHANGE","END","FINALIZE","TOUCHES_DOWN","TOUCHES_MOVE","TOUCHES_UP","TOUCHES_CANCELLED","exports","Gesture","BaseGesture","constructor","arguments","handlerTag","isWorklet","addDependency","gesture","config","Array","concat","withRef","ref","callback","__workletHash","onBegin","handlers","onStart","onEnd","onFinalize","onTouchesDown","needsPointerData","onTouchesMove","onTouchesUp","onTouchesCancelled","enabled","shouldCancelWhenOutside","hitSlop","simultaneousWithExternalGesture","_len","length","gestures","_key","requireExternalGestureToFail","_len2","_key2","initialize","getNextHandlerTag","current","toGestureArray","prepare","ContinousBaseGesture","onUpdate","onChange","manualActivation"],"sources":["gesture.ts"],"sourcesContent":["import { FlingGestureHandlerEventPayload } from '../FlingGestureHandler';\nimport { ForceTouchGestureHandlerEventPayload } from '../ForceTouchGestureHandler';\nimport {\n  HitSlop,\n  CommonGestureConfig,\n  GestureTouchEvent,\n  GestureStateChangeEvent,\n  GestureUpdateEvent,\n} from '../gestureHandlerCommon';\nimport { getNextHandlerTag } from '../handlersRegistry';\nimport { GestureStateManagerType } from './gestureStateManager';\nimport { LongPressGestureHandlerEventPayload } from '../LongPressGestureHandler';\nimport { PanGestureHandlerEventPayload } from '../PanGestureHandler';\nimport { PinchGestureHandlerEventPayload } from '../PinchGestureHandler';\nimport { RotationGestureHandlerEventPayload } from '../RotationGestureHandler';\nimport { TapGestureHandlerEventPayload } from '../TapGestureHandler';\nimport { NativeViewGestureHandlerPayload } from '../NativeViewGestureHandler';\n\nexport type GestureType =\n  | BaseGesture<Record<string, unknown>>\n  | BaseGesture<Record<string, never>>\n  | BaseGesture<TapGestureHandlerEventPayload>\n  | BaseGesture<PanGestureHandlerEventPayload>\n  | BaseGesture<LongPressGestureHandlerEventPayload>\n  | BaseGesture<RotationGestureHandlerEventPayload>\n  | BaseGesture<PinchGestureHandlerEventPayload>\n  | BaseGesture<FlingGestureHandlerEventPayload>\n  | BaseGesture<ForceTouchGestureHandlerEventPayload>\n  | BaseGesture<NativeViewGestureHandlerPayload>;\n\nexport type GestureRef =\n  | number\n  | GestureType\n  | React.RefObject<GestureType | undefined>\n  | React.RefObject<React.ComponentType | undefined>; // allow adding a ref to a gesture handler\nexport interface BaseGestureConfig\n  extends CommonGestureConfig,\n    Record<string, unknown> {\n  ref?: React.MutableRefObject<GestureType | undefined>;\n  requireToFail?: GestureRef[];\n  simultaneousWith?: GestureRef[];\n  needsPointerData?: boolean;\n  manualActivation?: boolean;\n}\n\ntype TouchEventHandlerType = (\n  event: GestureTouchEvent,\n  stateManager: GestureStateManagerType\n) => void;\n\nexport type HandlerCallbacks<EventPayloadT extends Record<string, unknown>> = {\n  handlerTag: number;\n  onBegin?: (event: GestureStateChangeEvent<EventPayloadT>) => void;\n  onStart?: (event: GestureStateChangeEvent<EventPayloadT>) => void;\n  onEnd?: (\n    event: GestureStateChangeEvent<EventPayloadT>,\n    success: boolean\n  ) => void;\n  onFinalize?: (\n    event: GestureStateChangeEvent<EventPayloadT>,\n    success: boolean\n  ) => void;\n  onUpdate?: (event: GestureUpdateEvent<EventPayloadT>) => void;\n  onChange?: (event: any) => void;\n  onTouchesDown?: TouchEventHandlerType;\n  onTouchesMove?: TouchEventHandlerType;\n  onTouchesUp?: TouchEventHandlerType;\n  onTouchesCancelled?: TouchEventHandlerType;\n  changeEventCalculator?: (\n    current: GestureUpdateEvent<Record<string, unknown>>,\n    previous?: GestureUpdateEvent<Record<string, unknown>>\n  ) => GestureUpdateEvent<Record<string, unknown>>;\n  isWorklet: boolean[];\n};\n\nexport const CALLBACK_TYPE = {\n  UNDEFINED: 0,\n  BEGAN: 1,\n  START: 2,\n  UPDATE: 3,\n  CHANGE: 4,\n  END: 5,\n  FINALIZE: 6,\n  TOUCHES_DOWN: 7,\n  TOUCHES_MOVE: 8,\n  TOUCHES_UP: 9,\n  TOUCHES_CANCELLED: 10,\n} as const;\n\n// Allow using CALLBACK_TYPE as object and type\n// eslint-disable-next-line @typescript-eslint/no-redeclare\nexport type CALLBACK_TYPE = typeof CALLBACK_TYPE[keyof typeof CALLBACK_TYPE];\n\nexport abstract class Gesture {\n  /**\n   * Return array of gestures, providing the same interface for creating and updating\n   * handlers, no matter which object was used to create gesture instance.\n   */\n  abstract toGestureArray(): GestureType[];\n\n  /**\n   * Assign handlerTag to the gesture instance and set ref.current (if a ref is set)\n   */\n  abstract initialize(): void;\n\n  /**\n   * Make sure that values of properties defining relations are arrays. Do any necessary\n   * preprocessing required to configure relations between handlers. Called just before\n   * updating the handler on the native side.\n   */\n  abstract prepare(): void;\n}\n\nexport abstract class BaseGesture<\n  EventPayloadT extends Record<string, unknown>\n> extends Gesture {\n  public handlerTag = -1;\n  public handlerName = '';\n  public config: BaseGestureConfig = {};\n  public handlers: HandlerCallbacks<EventPayloadT> = {\n    handlerTag: -1,\n    isWorklet: [false, false, false, false],\n  };\n\n  private addDependency(\n    key: 'simultaneousWith' | 'requireToFail',\n    gesture: Exclude<GestureRef, number>\n  ) {\n    const value = this.config[key];\n    this.config[key] = value\n      ? Array<GestureRef>().concat(value, gesture)\n      : [gesture];\n  }\n\n  withRef(ref: React.MutableRefObject<GestureType | undefined>) {\n    this.config.ref = ref;\n    return this;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  protected isWorklet(callback: Function) {\n    //@ts-ignore if callback is a worklet, the property will be available, if not then the check will return false\n    return callback.__workletHash !== undefined;\n  }\n\n  onBegin(callback: (event: GestureStateChangeEvent<EventPayloadT>) => void) {\n    this.handlers.onBegin = callback;\n    this.handlers.isWorklet[CALLBACK_TYPE.BEGAN] = this.isWorklet(callback);\n    return this;\n  }\n\n  onStart(callback: (event: GestureStateChangeEvent<EventPayloadT>) => void) {\n    this.handlers.onStart = callback;\n    this.handlers.isWorklet[CALLBACK_TYPE.START] = this.isWorklet(callback);\n    return this;\n  }\n\n  onEnd(\n    callback: (\n      event: GestureStateChangeEvent<EventPayloadT>,\n      success: boolean\n    ) => void\n  ) {\n    this.handlers.onEnd = callback;\n    //@ts-ignore if callback is a worklet, the property will be available, if not then the check will return false\n    this.handlers.isWorklet[CALLBACK_TYPE.END] = this.isWorklet(callback);\n    return this;\n  }\n\n  onFinalize(\n    callback: (\n      event: GestureStateChangeEvent<EventPayloadT>,\n      success: boolean\n    ) => void\n  ) {\n    this.handlers.onFinalize = callback;\n    //@ts-ignore if callback is a worklet, the property will be available, if not then the check will return false\n    this.handlers.isWorklet[CALLBACK_TYPE.FINALIZE] = this.isWorklet(callback);\n    return this;\n  }\n\n  onTouchesDown(callback: TouchEventHandlerType) {\n    this.config.needsPointerData = true;\n    this.handlers.onTouchesDown = callback;\n    this.handlers.isWorklet[CALLBACK_TYPE.TOUCHES_DOWN] = this.isWorklet(\n      callback\n    );\n\n    return this;\n  }\n\n  onTouchesMove(callback: TouchEventHandlerType) {\n    this.config.needsPointerData = true;\n    this.handlers.onTouchesMove = callback;\n    this.handlers.isWorklet[CALLBACK_TYPE.TOUCHES_MOVE] = this.isWorklet(\n      callback\n    );\n\n    return this;\n  }\n\n  onTouchesUp(callback: TouchEventHandlerType) {\n    this.config.needsPointerData = true;\n    this.handlers.onTouchesUp = callback;\n    this.handlers.isWorklet[CALLBACK_TYPE.TOUCHES_UP] = this.isWorklet(\n      callback\n    );\n\n    return this;\n  }\n\n  onTouchesCancelled(callback: TouchEventHandlerType) {\n    this.config.needsPointerData = true;\n    this.handlers.onTouchesCancelled = callback;\n    this.handlers.isWorklet[CALLBACK_TYPE.TOUCHES_CANCELLED] = this.isWorklet(\n      callback\n    );\n\n    return this;\n  }\n\n  enabled(enabled: boolean) {\n    this.config.enabled = enabled;\n    return this;\n  }\n\n  shouldCancelWhenOutside(value: boolean) {\n    this.config.shouldCancelWhenOutside = value;\n    return this;\n  }\n\n  hitSlop(hitSlop: HitSlop) {\n    this.config.hitSlop = hitSlop;\n    return this;\n  }\n\n  simultaneousWithExternalGesture(...gestures: Exclude<GestureRef, number>[]) {\n    for (const gesture of gestures) {\n      this.addDependency('simultaneousWith', gesture);\n    }\n    return this;\n  }\n\n  requireExternalGestureToFail(...gestures: Exclude<GestureRef, number>[]) {\n    for (const gesture of gestures) {\n      this.addDependency('requireToFail', gesture);\n    }\n    return this;\n  }\n\n  initialize() {\n    this.handlerTag = getNextHandlerTag();\n    this.handlers = { ...this.handlers, handlerTag: this.handlerTag };\n\n    if (this.config.ref) {\n      this.config.ref.current = this as GestureType;\n    }\n  }\n\n  toGestureArray(): GestureType[] {\n    return [this as GestureType];\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  prepare() {}\n}\n\nexport abstract class ContinousBaseGesture<\n  EventPayloadT extends Record<string, unknown>,\n  EventChangePayloadT extends Record<string, unknown>\n> extends BaseGesture<EventPayloadT> {\n  onUpdate(callback: (event: GestureUpdateEvent<EventPayloadT>) => void) {\n    this.handlers.onUpdate = callback;\n    this.handlers.isWorklet[CALLBACK_TYPE.UPDATE] = this.isWorklet(callback);\n    return this;\n  }\n\n  onChange(\n    callback: (\n      event: GestureUpdateEvent<EventPayloadT & EventChangePayloadT>\n    ) => void\n  ) {\n    this.handlers.onChange = callback;\n    this.handlers.isWorklet[CALLBACK_TYPE.CHANGE] = this.isWorklet(callback);\n    return this;\n  }\n\n  manualActivation(manualActivation: boolean) {\n    this.config.manualActivation = manualActivation;\n    return this;\n  }\n}\n"],"mappings":"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"}