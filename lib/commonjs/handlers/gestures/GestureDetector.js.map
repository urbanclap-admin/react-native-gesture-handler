{"version":3,"names":["_react","_interopRequireWildcard","require","_gesture","_reanimatedWrapper","_handlersRegistry","_RNGestureHandlerModule","_interopRequireDefault","_gestureHandlerCommon","_gestureStateManager","_FlingGestureHandler","_ForceTouchGestureHandler","_LongPressGestureHandler","_PanGestureHandler","_TapGestureHandler","_State","_EventType","_Reanimated$default$c","_Reanimated$default","obj","__esModule","default","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","ALLOWED_PROPS","baseGestureHandlerWithMonitorProps","tapGestureHandlerProps","panGestureHandlerProps","panGestureHandlerCustomNativeProps","longPressGestureHandlerProps","forceTouchGestureHandlerProps","flingGestureHandlerProps","convertToHandlerTag","ref","BaseGesture","handlerTag","_ref$current$handlerT","_ref$current","current","extractValidHandlerTags","interactionGroup","_interactionGroup$map","_interactionGroup$map2","map","filter","tag","dropHandlers","preparedGesture","handler","config","RNGestureHandlerModule","dropGestureHandler","unregisterHandler","attachHandlers","_ref","gestureConfig","gesture","viewTag","useAnimated","firstExecution","initialize","setImmediate","prepare","createGestureHandler","handlerName","filterConfig","registerHandler","requireToFail","simultaneousWith","updateGestureHandler","simultaneousHandlers","waitFor","attachGestureHandler","animatedHandlers","value","g","handlers","updateHandlers","i","length","needsToReattach","useAnimatedGesture","Reanimated","isStateChangeEvent","event","oldState","isTouchEvent","eventType","getHandler","type","CALLBACK_TYPE","BEGAN","onBegin","START","onStart","UPDATE","onUpdate","CHANGE","onChange","END","onEnd","FINALIZE","onFinalize","TOUCHES_DOWN","onTouchesDown","TOUCHES_MOVE","onTouchesMove","TOUCHES_UP","onTouchesUp","TOUCHES_CANCELLED","onTouchesCancelled","touchEventTypeToCallbackType","EventType","UNDEFINED","runWorklet","isWorklet","_len","arguments","args","Array","_key","console","warn","sharedHandlersCallbacks","useSharedValue","lastUpdateEvent","stateControllers","callback","currentCallback","State","UNDETERMINED","state","ACTIVE","undefined","FAILED","CANCELLED","GestureStateManager","create","changeEventCalculator","_gesture$changeEventC","useEvent","animatedEventHandler","GestureDetector","props","_gestureConfig$toGest","_gestureConfig$toGest2","toGestureArray","find","reduce","prev","viewRef","useRef","firstRenderRef","React","Error","_gestureConfig$initia","useEffect","findNodeHandle","createElement","AnimatedWrap","onGestureHandlerEvent","children","Wrap","exports","Component","render","child","Children","only","cloneElement","collapsable","createAnimatedComponent"],"sources":["GestureDetector.tsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport {\n  GestureType,\n  HandlerCallbacks,\n  BaseGesture,\n  GestureRef,\n  CALLBACK_TYPE,\n} from './gesture';\nimport { Reanimated, SharedValue } from './reanimatedWrapper';\nimport { registerHandler, unregisterHandler } from '../handlersRegistry';\nimport RNGestureHandlerModule from '../../RNGestureHandlerModule';\nimport {\n  baseGestureHandlerWithMonitorProps,\n  filterConfig,\n  findNodeHandle,\n  GestureTouchEvent,\n  GestureUpdateEvent,\n  GestureStateChangeEvent,\n} from '../gestureHandlerCommon';\nimport {\n  GestureStateManager,\n  GestureStateManagerType,\n} from './gestureStateManager';\nimport { flingGestureHandlerProps } from '../FlingGestureHandler';\nimport { forceTouchGestureHandlerProps } from '../ForceTouchGestureHandler';\nimport { longPressGestureHandlerProps } from '../LongPressGestureHandler';\nimport {\n  panGestureHandlerProps,\n  panGestureHandlerCustomNativeProps,\n} from '../PanGestureHandler';\nimport { tapGestureHandlerProps } from '../TapGestureHandler';\nimport { State } from '../../State';\nimport { EventType } from '../../EventType';\nimport { ComposedGesture } from './gestureComposition';\n\nconst ALLOWED_PROPS = [\n  ...baseGestureHandlerWithMonitorProps,\n  ...tapGestureHandlerProps,\n  ...panGestureHandlerProps,\n  ...panGestureHandlerCustomNativeProps,\n  ...longPressGestureHandlerProps,\n  ...forceTouchGestureHandlerProps,\n  ...flingGestureHandlerProps,\n];\n\nexport type GestureConfigReference = {\n  config: GestureType[];\n  animatedEventHandler: unknown;\n  animatedHandlers: SharedValue<\n    HandlerCallbacks<Record<string, unknown>>[] | null\n  > | null;\n  firstExecution: boolean;\n  useAnimated: boolean;\n};\n\nfunction convertToHandlerTag(ref: GestureRef): number {\n  if (typeof ref === 'number') {\n    return ref;\n  } else if (ref instanceof BaseGesture) {\n    return ref.handlerTag;\n  } else {\n    // @ts-ignore in this case it should be a ref either to gesture object or\n    // a gesture handler component, in both cases handlerTag property exists\n    return ref.current?.handlerTag ?? -1;\n  }\n}\n\nfunction extractValidHandlerTags(interactionGroup: GestureRef[] | undefined) {\n  return (\n    interactionGroup?.map(convertToHandlerTag)?.filter((tag) => tag > 0) ?? []\n  );\n}\n\nfunction dropHandlers(preparedGesture: GestureConfigReference) {\n  for (const handler of preparedGesture.config) {\n    RNGestureHandlerModule.dropGestureHandler(handler.handlerTag);\n\n    unregisterHandler(handler.handlerTag);\n  }\n}\n\ninterface AttachHandlersConfig {\n  preparedGesture: GestureConfigReference;\n  gestureConfig: ComposedGesture | GestureType | undefined;\n  gesture: GestureType[];\n  viewTag: number;\n  useAnimated: boolean;\n}\n\nfunction attachHandlers({\n  preparedGesture,\n  gestureConfig,\n  gesture,\n  viewTag,\n  useAnimated,\n}: AttachHandlersConfig) {\n  if (!preparedGesture.firstExecution) {\n    gestureConfig?.initialize();\n  } else {\n    preparedGesture.firstExecution = false;\n  }\n\n  // use setImmediate to extract handlerTags, because all refs should be initialized\n  // when it's ran\n  setImmediate(() => {\n    gestureConfig?.prepare();\n  });\n\n  for (const handler of gesture) {\n    RNGestureHandlerModule.createGestureHandler(\n      handler.handlerName,\n      handler.handlerTag,\n      filterConfig(handler.config, ALLOWED_PROPS)\n    );\n\n    registerHandler(handler.handlerTag, handler);\n\n    // use setImmediate to extract handlerTags, because all refs should be initialized\n    // when it's ran\n    setImmediate(() => {\n      let requireToFail: number[] = [];\n      if (handler.config.requireToFail) {\n        requireToFail = extractValidHandlerTags(handler.config.requireToFail);\n      }\n\n      let simultaneousWith: number[] = [];\n      if (handler.config.simultaneousWith) {\n        simultaneousWith = extractValidHandlerTags(\n          handler.config.simultaneousWith\n        );\n      }\n\n      RNGestureHandlerModule.updateGestureHandler(\n        handler.handlerTag,\n        filterConfig(handler.config, ALLOWED_PROPS, {\n          simultaneousHandlers: simultaneousWith,\n          waitFor: requireToFail,\n        })\n      );\n    });\n  }\n  preparedGesture.config = gesture;\n\n  for (const gesture of preparedGesture.config) {\n    RNGestureHandlerModule.attachGestureHandler(\n      gesture.handlerTag,\n      viewTag,\n      !useAnimated // send direct events when using animatedGesture, device events otherwise\n    );\n  }\n\n  if (preparedGesture.animatedHandlers) {\n    preparedGesture.animatedHandlers.value = (gesture.map(\n      (g) => g.handlers\n    ) as unknown) as HandlerCallbacks<Record<string, unknown>>[];\n  }\n}\n\nfunction updateHandlers(\n  preparedGesture: GestureConfigReference,\n  gestureConfig: ComposedGesture | GestureType | undefined,\n  gesture: GestureType[]\n) {\n  gestureConfig?.prepare();\n\n  for (let i = 0; i < gesture.length; i++) {\n    const handler = preparedGesture.config[i];\n\n    gesture[i].handlerTag = handler.handlerTag;\n    gesture[i].handlers.handlerTag = handler.handlerTag;\n  }\n\n  // use setImmediate to extract handlerTags, because when it's ran, all refs should be updated\n  // and handlerTags in BaseGesture references should be updated in the loop above (we need to wait\n  // in case of external relations)\n  setImmediate(() => {\n    for (let i = 0; i < gesture.length; i++) {\n      const handler = preparedGesture.config[i];\n\n      handler.config = gesture[i].config;\n      handler.handlers = gesture[i].handlers;\n      handler.handlers.handlerTag = handler.handlerTag;\n\n      const requireToFail = extractValidHandlerTags(\n        handler.config.requireToFail\n      );\n\n      const simultaneousWith = extractValidHandlerTags(\n        handler.config.simultaneousWith\n      );\n\n      RNGestureHandlerModule.updateGestureHandler(\n        handler.handlerTag,\n        filterConfig(handler.config, ALLOWED_PROPS, {\n          simultaneousHandlers: simultaneousWith,\n          waitFor: requireToFail,\n        })\n      );\n\n      registerHandler(handler.handlerTag, handler);\n    }\n\n    if (preparedGesture.animatedHandlers) {\n      preparedGesture.animatedHandlers.value = (preparedGesture.config.map(\n        (g) => g.handlers\n      ) as unknown) as HandlerCallbacks<Record<string, unknown>>[];\n    }\n  });\n}\n\nfunction needsToReattach(\n  preparedGesture: GestureConfigReference,\n  gesture: GestureType[]\n) {\n  if (gesture.length !== preparedGesture.config.length) {\n    return true;\n  }\n  for (let i = 0; i < gesture.length; i++) {\n    if (gesture[i].handlerName !== preparedGesture.config[i].handlerName) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction useAnimatedGesture(preparedGesture: GestureConfigReference) {\n  if (!Reanimated) {\n    return;\n  }\n\n  function isStateChangeEvent(\n    event: GestureUpdateEvent | GestureStateChangeEvent | GestureTouchEvent\n  ): event is GestureStateChangeEvent {\n    'worklet';\n    // @ts-ignore Yes, the oldState prop is missing on GestureTouchEvent, that's the point\n    return event.oldState != null;\n  }\n\n  function isTouchEvent(\n    event: GestureUpdateEvent | GestureStateChangeEvent | GestureTouchEvent\n  ): event is GestureTouchEvent {\n    'worklet';\n    return event.eventType != null;\n  }\n\n  function getHandler(\n    type: CALLBACK_TYPE,\n    gesture: HandlerCallbacks<Record<string, unknown>>\n  ) {\n    'worklet';\n    switch (type) {\n      case CALLBACK_TYPE.BEGAN:\n        return gesture.onBegin;\n      case CALLBACK_TYPE.START:\n        return gesture.onStart;\n      case CALLBACK_TYPE.UPDATE:\n        return gesture.onUpdate;\n      case CALLBACK_TYPE.CHANGE:\n        return gesture.onChange;\n      case CALLBACK_TYPE.END:\n        return gesture.onEnd;\n      case CALLBACK_TYPE.FINALIZE:\n        return gesture.onFinalize;\n      case CALLBACK_TYPE.TOUCHES_DOWN:\n        return gesture.onTouchesDown;\n      case CALLBACK_TYPE.TOUCHES_MOVE:\n        return gesture.onTouchesMove;\n      case CALLBACK_TYPE.TOUCHES_UP:\n        return gesture.onTouchesUp;\n      case CALLBACK_TYPE.TOUCHES_CANCELLED:\n        return gesture.onTouchesCancelled;\n    }\n  }\n\n  function touchEventTypeToCallbackType(eventType: EventType): CALLBACK_TYPE {\n    'worklet';\n    switch (eventType) {\n      case EventType.TOUCHES_DOWN:\n        return CALLBACK_TYPE.TOUCHES_DOWN;\n      case EventType.TOUCHES_MOVE:\n        return CALLBACK_TYPE.TOUCHES_MOVE;\n      case EventType.TOUCHES_UP:\n        return CALLBACK_TYPE.TOUCHES_UP;\n      case EventType.TOUCHES_CANCELLED:\n        return CALLBACK_TYPE.TOUCHES_CANCELLED;\n    }\n    return CALLBACK_TYPE.UNDEFINED;\n  }\n\n  function runWorklet(\n    type: CALLBACK_TYPE,\n    gesture: HandlerCallbacks<Record<string, unknown>>,\n    event: GestureStateChangeEvent | GestureUpdateEvent | GestureTouchEvent,\n    ...args: any[]\n  ) {\n    'worklet';\n    const handler = getHandler(type, gesture);\n    if (gesture.isWorklet[type]) {\n      // @ts-ignore Logic below makes sure the correct event is send to the\n      // correct handler.\n      handler?.(event, ...args);\n    } else if (handler) {\n      console.warn('Animated gesture callback must be a worklet');\n    }\n  }\n\n  // Hooks are called conditionally, but the condition is whether the\n  // react-native-reanimated is installed, which shouldn't change while running\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  const sharedHandlersCallbacks = Reanimated.useSharedValue<\n    HandlerCallbacks<Record<string, unknown>>[] | null\n  >(null);\n\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  const lastUpdateEvent = Reanimated.useSharedValue<\n    (GestureUpdateEvent | undefined)[]\n  >([]);\n\n  // not every gesture needs a state controller, init them lazily\n  const stateControllers: GestureStateManagerType[] = [];\n\n  const callback = (\n    event: GestureStateChangeEvent | GestureUpdateEvent | GestureTouchEvent\n  ) => {\n    'worklet';\n\n    const currentCallback = sharedHandlersCallbacks.value;\n    if (!currentCallback) {\n      return;\n    }\n\n    for (let i = 0; i < currentCallback.length; i++) {\n      const gesture = currentCallback[i];\n\n      if (event.handlerTag === gesture.handlerTag) {\n        if (isStateChangeEvent(event)) {\n          if (\n            event.oldState === State.UNDETERMINED &&\n            event.state === State.BEGAN\n          ) {\n            runWorklet(CALLBACK_TYPE.BEGAN, gesture, event);\n          } else if (\n            (event.oldState === State.BEGAN ||\n              event.oldState === State.UNDETERMINED) &&\n            event.state === State.ACTIVE\n          ) {\n            runWorklet(CALLBACK_TYPE.START, gesture, event);\n            lastUpdateEvent.value[gesture.handlerTag] = undefined;\n          } else if (\n            event.oldState !== event.state &&\n            event.state === State.END\n          ) {\n            if (event.oldState === State.ACTIVE) {\n              runWorklet(CALLBACK_TYPE.END, gesture, event, true);\n            }\n            runWorklet(CALLBACK_TYPE.FINALIZE, gesture, event, true);\n          } else if (\n            (event.state === State.FAILED || event.state === State.CANCELLED) &&\n            event.state !== event.oldState\n          ) {\n            if (event.oldState === State.ACTIVE) {\n              runWorklet(CALLBACK_TYPE.END, gesture, event, false);\n            }\n            runWorklet(CALLBACK_TYPE.FINALIZE, gesture, event, false);\n          }\n        } else if (isTouchEvent(event)) {\n          if (!stateControllers[i]) {\n            stateControllers[i] = GestureStateManager.create(event.handlerTag);\n          }\n\n          if (event.eventType !== EventType.UNDETERMINED) {\n            runWorklet(\n              touchEventTypeToCallbackType(event.eventType),\n              gesture,\n              event,\n              stateControllers[i]\n            );\n          }\n        } else {\n          runWorklet(CALLBACK_TYPE.UPDATE, gesture, event);\n\n          if (gesture.onChange && gesture.changeEventCalculator) {\n            runWorklet(\n              CALLBACK_TYPE.CHANGE,\n              gesture,\n              gesture.changeEventCalculator?.(\n                event,\n                lastUpdateEvent.value[gesture.handlerTag]\n              )\n            );\n\n            lastUpdateEvent.value[gesture.handlerTag] = event;\n          }\n        }\n      }\n    }\n  };\n\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  const event = Reanimated.useEvent(\n    callback,\n    ['onGestureHandlerStateChange', 'onGestureHandlerEvent'],\n    true\n  );\n\n  preparedGesture.animatedEventHandler = event;\n  preparedGesture.animatedHandlers = sharedHandlersCallbacks;\n}\n\ninterface GestureDetectorProps {\n  gesture?: ComposedGesture | GestureType;\n}\nexport const GestureDetector: React.FunctionComponent<GestureDetectorProps> = (\n  props\n) => {\n  const gestureConfig = props.gesture;\n  const gesture = gestureConfig?.toGestureArray?.() ?? [];\n  const useAnimated =\n    gesture.find((gesture) =>\n      gesture.handlers.isWorklet.reduce((prev, current) => prev || current)\n    ) != null;\n  const viewRef = useRef(null);\n  const firstRenderRef = useRef(true);\n\n  const preparedGesture = React.useRef<GestureConfigReference>({\n    config: gesture,\n    animatedEventHandler: null,\n    animatedHandlers: null,\n    firstExecution: true,\n    useAnimated: useAnimated,\n  }).current;\n\n  if (useAnimated !== preparedGesture.useAnimated) {\n    throw new Error(\n      'You cannot change whether you are using gesture or animatedGesture while the app is running'\n    );\n  }\n\n  if (preparedGesture.firstExecution) {\n    gestureConfig?.initialize?.();\n  }\n\n  if (useAnimated) {\n    // Whether animatedGesture or gesture is used shouldn't change\n    // during while an app is running\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    useAnimatedGesture(preparedGesture);\n  }\n\n  useEffect(() => {\n    firstRenderRef.current = true;\n    const viewTag = findNodeHandle(viewRef.current) as number;\n    attachHandlers({\n      preparedGesture,\n      gestureConfig,\n      gesture,\n      viewTag,\n      useAnimated,\n    });\n\n    return () => {\n      dropHandlers(preparedGesture);\n    };\n  }, []);\n\n  useEffect(() => {\n    if (!firstRenderRef.current) {\n      const viewTag = findNodeHandle(viewRef.current) as number;\n\n      if (needsToReattach(preparedGesture, gesture)) {\n        dropHandlers(preparedGesture);\n        attachHandlers({\n          preparedGesture,\n          gestureConfig,\n          gesture,\n          viewTag,\n          useAnimated,\n        });\n      } else {\n        updateHandlers(preparedGesture, gestureConfig, gesture);\n      }\n    } else {\n      firstRenderRef.current = false;\n    }\n  }, [props]);\n\n  if (useAnimated) {\n    return (\n      <AnimatedWrap\n        ref={viewRef}\n        onGestureHandlerEvent={preparedGesture.animatedEventHandler}>\n        {props.children}\n      </AnimatedWrap>\n    );\n  } else {\n    return <Wrap ref={viewRef}>{props.children}</Wrap>;\n  }\n};\n\nclass Wrap extends React.Component<{ onGestureHandlerEvent?: unknown }> {\n  render() {\n    // I don't think that fighting with types over such a simple function is worth it\n    // The only thing it does is add 'collapsable: false' to the child component\n    // to make sure it is in the native view hierarchy so the detector can find\n    // correct viewTag to attach to.\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const child: any = React.Children.only(this.props.children);\n\n    return React.cloneElement(\n      child,\n      { collapsable: false },\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      child.props.children\n    );\n  }\n}\n\nconst AnimatedWrap = Reanimated?.default?.createAnimatedComponent(Wrap) ?? Wrap;\n"],"mappings":"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"}