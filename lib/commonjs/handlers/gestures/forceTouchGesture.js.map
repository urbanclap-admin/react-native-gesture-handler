{"version":3,"names":["_gesture","require","_defineProperty","obj","key","value","_toPropertyKey","Object","defineProperty","enumerable","configurable","writable","arg","_toPrimitive","String","input","hint","prim","Symbol","toPrimitive","undefined","res","call","TypeError","Number","changeEventCalculator","current","previous","changePayload","forceChange","force","ForceTouchGesture","ContinousBaseGesture","constructor","handlerName","minForce","config","maxForce","feedbackOnActivation","onChange","callback","handlers","exports"],"sources":["forceTouchGesture.ts"],"sourcesContent":["import { BaseGestureConfig, ContinousBaseGesture } from './gesture';\nimport {\n  ForceTouchGestureConfig,\n  ForceTouchGestureHandlerEventPayload,\n} from '../ForceTouchGestureHandler';\nimport { GestureUpdateEvent } from '../gestureHandlerCommon';\n\ntype ForceTouchGestureChangeEventPayload = {\n  forceChange: number;\n};\n\nfunction changeEventCalculator(\n  current: GestureUpdateEvent<ForceTouchGestureHandlerEventPayload>,\n  previous?: GestureUpdateEvent<ForceTouchGestureHandlerEventPayload>\n) {\n  'worklet';\n  let changePayload: ForceTouchGestureChangeEventPayload;\n  if (previous === undefined) {\n    changePayload = {\n      forceChange: current.force,\n    };\n  } else {\n    changePayload = {\n      forceChange: current.force - previous.force,\n    };\n  }\n\n  return { ...current, ...changePayload };\n}\n\nexport class ForceTouchGesture extends ContinousBaseGesture<\n  ForceTouchGestureHandlerEventPayload,\n  ForceTouchGestureChangeEventPayload\n> {\n  public config: BaseGestureConfig & ForceTouchGestureConfig = {};\n\n  constructor() {\n    super();\n\n    this.handlerName = 'ForceTouchGestureHandler';\n  }\n\n  minForce(force: number) {\n    this.config.minForce = force;\n    return this;\n  }\n\n  maxForce(force: number) {\n    this.config.maxForce = force;\n    return this;\n  }\n\n  feedbackOnActivation(value: boolean) {\n    this.config.feedbackOnActivation = value;\n    return this;\n  }\n\n  onChange(\n    callback: (\n      event: GestureUpdateEvent<\n        GestureUpdateEvent<\n          ForceTouchGestureHandlerEventPayload &\n            ForceTouchGestureChangeEventPayload\n        >\n      >\n    ) => void\n  ) {\n    // @ts-ignore TS being overprotective, ForceTouchGestureHandlerEventPayload is Record\n    this.handlers.changeEventCalculator = changeEventCalculator;\n    return super.onChange(callback);\n  }\n}\n\nexport type ForceTouchGestureType = InstanceType<typeof ForceTouchGesture>;\n"],"mappings":";;;;;;AAAA,IAAAA,QAAA,GAAAC,OAAA;AAAoE,SAAAC,gBAAAC,GAAA,EAAAC,GAAA,EAAAC,KAAA,IAAAD,GAAA,GAAAE,cAAA,CAAAF,GAAA,OAAAA,GAAA,IAAAD,GAAA,IAAAI,MAAA,CAAAC,cAAA,CAAAL,GAAA,EAAAC,GAAA,IAAAC,KAAA,EAAAA,KAAA,EAAAI,UAAA,QAAAC,YAAA,QAAAC,QAAA,oBAAAR,GAAA,CAAAC,GAAA,IAAAC,KAAA,WAAAF,GAAA;AAAA,SAAAG,eAAAM,GAAA,QAAAR,GAAA,GAAAS,YAAA,CAAAD,GAAA,2BAAAR,GAAA,gBAAAA,GAAA,GAAAU,MAAA,CAAAV,GAAA;AAAA,SAAAS,aAAAE,KAAA,EAAAC,IAAA,eAAAD,KAAA,iBAAAA,KAAA,kBAAAA,KAAA,MAAAE,IAAA,GAAAF,KAAA,CAAAG,MAAA,CAAAC,WAAA,OAAAF,IAAA,KAAAG,SAAA,QAAAC,GAAA,GAAAJ,IAAA,CAAAK,IAAA,CAAAP,KAAA,EAAAC,IAAA,2BAAAK,GAAA,sBAAAA,GAAA,YAAAE,SAAA,4DAAAP,IAAA,gBAAAF,MAAA,GAAAU,MAAA,EAAAT,KAAA;AAWpE,SAASU,qBAAqBA,CAC5BC,OAAiE,EACjEC,QAAmE,EACnE;EACA,SAAS;;EACT,IAAIC,aAAkD;EACtD,IAAID,QAAQ,KAAKP,SAAS,EAAE;IAC1BQ,aAAa,GAAG;MACdC,WAAW,EAAEH,OAAO,CAACI;IACvB,CAAC;EACH,CAAC,MAAM;IACLF,aAAa,GAAG;MACdC,WAAW,EAAEH,OAAO,CAACI,KAAK,GAAGH,QAAQ,CAACG;IACxC,CAAC;EACH;EAEA,OAAO;IAAE,GAAGJ,OAAO;IAAE,GAAGE;EAAc,CAAC;AACzC;AAEO,MAAMG,iBAAiB,SAASC,6BAAoB,CAGzD;EAGAC,WAAWA,CAAA,EAAG;IACZ,KAAK,CAAC,CAAC;IAAC/B,eAAA,iBAHmD,CAAC,CAAC;IAK7D,IAAI,CAACgC,WAAW,GAAG,0BAA0B;EAC/C;EAEAC,QAAQA,CAACL,KAAa,EAAE;IACtB,IAAI,CAACM,MAAM,CAACD,QAAQ,GAAGL,KAAK;IAC5B,OAAO,IAAI;EACb;EAEAO,QAAQA,CAACP,KAAa,EAAE;IACtB,IAAI,CAACM,MAAM,CAACC,QAAQ,GAAGP,KAAK;IAC5B,OAAO,IAAI;EACb;EAEAQ,oBAAoBA,CAACjC,KAAc,EAAE;IACnC,IAAI,CAAC+B,MAAM,CAACE,oBAAoB,GAAGjC,KAAK;IACxC,OAAO,IAAI;EACb;EAEAkC,QAAQA,CACNC,QAOS,EACT;IACA;IACA,IAAI,CAACC,QAAQ,CAAChB,qBAAqB,GAAGA,qBAAqB;IAC3D,OAAO,KAAK,CAACc,QAAQ,CAACC,QAAQ,CAAC;EACjC;AACF;AAACE,OAAA,CAAAX,iBAAA,GAAAA,iBAAA"}