{"version":3,"names":["React","_interopRequireWildcard","require","_NativeViewGestureHandler","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_extends","assign","bind","target","i","arguments","length","source","apply","NATIVE_WRAPPER_PROPS_FILTER","nativeViewProps","createNativeWrapper","Component","config","undefined","ComponentWrapper","forwardRef","props","ref","gestureHandlerProps","keys","reduce","res","allowedKeys","includes","_ref","useRef","_gestureHandlerRef","useImperativeHandle","node","current","handlerTag","createElement","NativeViewGestureHandler","displayName"],"sources":["createNativeWrapper.tsx"],"sourcesContent":["import * as React from 'react';\nimport { useImperativeHandle, useRef } from 'react';\n\nimport {\n  NativeViewGestureHandler,\n  NativeViewGestureHandlerProps,\n  nativeViewProps,\n} from './NativeViewGestureHandler';\n\n/*\n * This array should consist of:\n *   - All keys in propTypes from NativeGestureHandler\n *     (and all keys in GestureHandlerPropTypes)\n *   - 'onGestureHandlerEvent'\n *   - 'onGestureHandlerStateChange'\n */\nconst NATIVE_WRAPPER_PROPS_FILTER = [\n  ...nativeViewProps,\n  'onGestureHandlerEvent',\n  'onGestureHandlerStateChange',\n] as const;\n\nexport default function createNativeWrapper<P>(\n  Component: React.ComponentType<P>,\n  config: Readonly<NativeViewGestureHandlerProps> = {}\n) {\n  const ComponentWrapper = React.forwardRef<\n    React.ComponentType<any>,\n    P & NativeViewGestureHandlerProps\n  >((props, ref) => {\n    // filter out props that should be passed to gesture handler wrapper\n    const gestureHandlerProps = Object.keys(props).reduce(\n      (res, key) => {\n        // TS being overly protective with it's types, see https://github.com/microsoft/TypeScript/issues/26255#issuecomment-458013731 for more info\n        const allowedKeys: readonly string[] = NATIVE_WRAPPER_PROPS_FILTER;\n        if (allowedKeys.includes(key)) {\n          // @ts-ignore FIXME(TS)\n          res[key] = props[key];\n        }\n        return res;\n      },\n      { ...config } // watch out not to modify config\n    );\n    const _ref = useRef<React.ComponentType<P>>();\n    const _gestureHandlerRef = useRef<React.ComponentType<P>>();\n    useImperativeHandle(\n      ref,\n      // @ts-ignore TODO(TS) decide how nulls work in this context\n      () => {\n        const node = _gestureHandlerRef.current;\n        // add handlerTag for relations config\n        if (_ref.current && node) {\n          // @ts-ignore FIXME(TS) think about createHandler return type\n          _ref.current.handlerTag = node.handlerTag;\n          return _ref.current;\n        }\n        return null;\n      },\n      [_ref, _gestureHandlerRef]\n    );\n    return (\n      <NativeViewGestureHandler\n        {...gestureHandlerProps}\n        // @ts-ignore TODO(TS)\n        ref={_gestureHandlerRef}>\n        <Component {...props} ref={_ref} />\n      </NativeViewGestureHandler>\n    );\n  });\n\n  ComponentWrapper.displayName = Component.displayName || 'ComponentWrapper';\n\n  return ComponentWrapper;\n}\n"],"mappings":"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"}