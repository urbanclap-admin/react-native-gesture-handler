{"version":3,"names":["_hammerjs","_interopRequireDefault","require","_constants","_DraggingGestureHandler","_utils","_State","obj","__esModule","default","PanGestureHandler","DraggingGestureHandler","name","NativeGestureClass","Hammer","Pan","getHammerConfig","direction","getDirection","getState","type","nextState","previousState","State","UNDETERMINED","ACTIVE","BEGAN","config","getConfig","activeOffsetXStart","activeOffsetXEnd","activeOffsetYStart","activeOffsetYEnd","minDist","directions","horizontalDirections","isnan","DIRECTION_ALL","push","DIRECTION_LEFT","DIRECTION_RIGHT","length","DIRECTION_HORIZONTAL","concat","verticalDirections","DIRECTION_UP","DIRECTION_DOWN","DIRECTION_VERTICAL","DIRECTION_NONE","hasCustomActivationCriteria","minDistSq","shouldFailUnderCustomCriteria","_ref","criteria","deltaX","deltaY","failOffsetXStart","failOffsetXEnd","failOffsetYStart","failOffsetYEnd","shouldActivateUnderCustomCriteria","_ref2","velocity","TEST_MIN_IF_NOT_NAN","VEC_LEN_SQ","x","y","minVelocityX","minVelocityY","minVelocitySq","shouldMultiFingerPanFail","_ref3","pointerLength","scale","deltaRotation","deltaScale","Math","abs","absDeltaRotation","MULTI_FINGER_PAN_MAX_PINCH_THRESHOLD","MULTI_FINGER_PAN_MAX_ROTATION_THRESHOLD","updateHasCustomActivationCriteria","isValidNumber","isGestureEnabledForEvent","props","_recognizer","inputData","failed","velocityX","velocityY","maxPointers","success","_default","exports"],"sources":["PanGestureHandler.ts"],"sourcesContent":["import Hammer from '@egjs/hammerjs';\n\nimport {\n  EventMap,\n  MULTI_FINGER_PAN_MAX_PINCH_THRESHOLD,\n  MULTI_FINGER_PAN_MAX_ROTATION_THRESHOLD,\n} from './constants';\nimport DraggingGestureHandler from './DraggingGestureHandler';\nimport { isValidNumber, isnan, TEST_MIN_IF_NOT_NAN, VEC_LEN_SQ } from './utils';\nimport { State } from '../State';\n\nimport { Config, HammerInputExt } from './GestureHandler';\nclass PanGestureHandler extends DraggingGestureHandler {\n  get name() {\n    return 'pan';\n  }\n\n  get NativeGestureClass() {\n    return Hammer.Pan;\n  }\n\n  getHammerConfig() {\n    return {\n      ...super.getHammerConfig(),\n      direction: this.getDirection(),\n    };\n  }\n\n  getState(type: keyof typeof EventMap) {\n    const nextState = super.getState(type);\n    // Ensure that the first state sent is `BEGAN` and not `ACTIVE`\n    if (\n      this.previousState === State.UNDETERMINED &&\n      nextState === State.ACTIVE\n    ) {\n      return State.BEGAN;\n    }\n    return nextState;\n  }\n\n  getDirection() {\n    const config = this.getConfig();\n    const {\n      activeOffsetXStart,\n      activeOffsetXEnd,\n      activeOffsetYStart,\n      activeOffsetYEnd,\n      minDist,\n    } = config;\n    let directions: number[] = [];\n    let horizontalDirections = [];\n\n    if (!isnan(minDist)) {\n      return Hammer.DIRECTION_ALL;\n    }\n\n    if (!isnan(activeOffsetXStart))\n      horizontalDirections.push(Hammer.DIRECTION_LEFT);\n    if (!isnan(activeOffsetXEnd))\n      horizontalDirections.push(Hammer.DIRECTION_RIGHT);\n    if (horizontalDirections.length === 2)\n      horizontalDirections = [Hammer.DIRECTION_HORIZONTAL];\n\n    directions = directions.concat(horizontalDirections);\n    let verticalDirections = [];\n\n    if (!isnan(activeOffsetYStart))\n      verticalDirections.push(Hammer.DIRECTION_UP);\n    if (!isnan(activeOffsetYEnd))\n      verticalDirections.push(Hammer.DIRECTION_DOWN);\n\n    if (verticalDirections.length === 2)\n      verticalDirections = [Hammer.DIRECTION_VERTICAL];\n\n    directions = directions.concat(verticalDirections);\n\n    if (!directions.length) {\n      return Hammer.DIRECTION_NONE;\n    }\n    if (\n      directions[0] === Hammer.DIRECTION_HORIZONTAL &&\n      directions[1] === Hammer.DIRECTION_VERTICAL\n    ) {\n      return Hammer.DIRECTION_ALL;\n    }\n    if (horizontalDirections.length && verticalDirections.length) {\n      return Hammer.DIRECTION_ALL;\n    }\n\n    return directions[0];\n  }\n\n  getConfig() {\n    if (!this.hasCustomActivationCriteria) {\n      // Default config\n      // If no params have been defined then this config should emulate the native gesture as closely as possible.\n      return {\n        minDistSq: 10,\n      };\n    }\n    return this.config;\n  }\n\n  shouldFailUnderCustomCriteria(\n    { deltaX, deltaY }: HammerInputExt,\n    criteria: any\n  ) {\n    return (\n      (!isnan(criteria.failOffsetXStart) &&\n        deltaX < criteria.failOffsetXStart) ||\n      (!isnan(criteria.failOffsetXEnd) && deltaX > criteria.failOffsetXEnd) ||\n      (!isnan(criteria.failOffsetYStart) &&\n        deltaY < criteria.failOffsetYStart) ||\n      (!isnan(criteria.failOffsetYEnd) && deltaY > criteria.failOffsetYEnd)\n    );\n  }\n\n  shouldActivateUnderCustomCriteria(\n    { deltaX, deltaY, velocity }: any,\n    criteria: any\n  ) {\n    return (\n      (!isnan(criteria.activeOffsetXStart) &&\n        deltaX < criteria.activeOffsetXStart) ||\n      (!isnan(criteria.activeOffsetXEnd) &&\n        deltaX > criteria.activeOffsetXEnd) ||\n      (!isnan(criteria.activeOffsetYStart) &&\n        deltaY < criteria.activeOffsetYStart) ||\n      (!isnan(criteria.activeOffsetYEnd) &&\n        deltaY > criteria.activeOffsetYEnd) ||\n      TEST_MIN_IF_NOT_NAN(\n        VEC_LEN_SQ({ x: deltaX, y: deltaY }),\n        criteria.minDistSq\n      ) ||\n      TEST_MIN_IF_NOT_NAN(velocity.x, criteria.minVelocityX) ||\n      TEST_MIN_IF_NOT_NAN(velocity.y, criteria.minVelocityY) ||\n      TEST_MIN_IF_NOT_NAN(VEC_LEN_SQ(velocity), criteria.minVelocitySq)\n    );\n  }\n\n  shouldMultiFingerPanFail({\n    pointerLength,\n    scale,\n    deltaRotation,\n  }: {\n    deltaRotation: number;\n    pointerLength: number;\n    scale: number;\n  }) {\n    if (pointerLength <= 1) {\n      return false;\n    }\n\n    // Test if the pan had too much pinching or rotating.\n    const deltaScale = Math.abs(scale - 1);\n    const absDeltaRotation = Math.abs(deltaRotation);\n    if (deltaScale > MULTI_FINGER_PAN_MAX_PINCH_THRESHOLD) {\n      // > If the threshold doesn't seem right.\n      // You can log the value which it failed at here:\n      return true;\n    }\n    if (absDeltaRotation > MULTI_FINGER_PAN_MAX_ROTATION_THRESHOLD) {\n      // > If the threshold doesn't seem right.\n      // You can log the value which it failed at here:\n      return true;\n    }\n\n    return false;\n  }\n\n  updateHasCustomActivationCriteria(\n    criteria: Config & { minVelocityX?: number; minVelocityY?: number }\n  ) {\n    return (\n      isValidNumber(criteria.minDistSq) ||\n      isValidNumber(criteria.minVelocityX) ||\n      isValidNumber(criteria.minVelocityY) ||\n      isValidNumber(criteria.minVelocitySq) ||\n      isValidNumber(criteria.activeOffsetXStart) ||\n      isValidNumber(criteria.activeOffsetXEnd) ||\n      isValidNumber(criteria.activeOffsetYStart) ||\n      isValidNumber(criteria.activeOffsetYEnd)\n    );\n  }\n\n  isGestureEnabledForEvent(\n    props: any,\n    _recognizer: any,\n    inputData: HammerInputExt & { deltaRotation: number }\n  ) {\n    if (this.shouldFailUnderCustomCriteria(inputData, props)) {\n      return { failed: true };\n    }\n\n    const velocity = { x: inputData.velocityX, y: inputData.velocityY };\n    if (\n      this.hasCustomActivationCriteria &&\n      this.shouldActivateUnderCustomCriteria(\n        { deltaX: inputData.deltaX, deltaY: inputData.deltaY, velocity },\n        props\n      )\n    ) {\n      if (\n        this.shouldMultiFingerPanFail({\n          pointerLength: inputData.maxPointers,\n          scale: inputData.scale,\n          deltaRotation: inputData.deltaRotation,\n        })\n      ) {\n        return {\n          failed: true,\n        };\n      }\n      return { success: true };\n    }\n    return { success: false };\n  }\n}\n\nexport default PanGestureHandler;\n"],"mappings":"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"}