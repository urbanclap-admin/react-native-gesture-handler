{"version":3,"names":["_reactNative","require","React","_interopRequireWildcard","_GenericTouchable","_interopRequireDefault","obj","__esModule","default","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_extends","assign","bind","target","i","arguments","length","source","apply","_defineProperty","value","_toPropertyKey","enumerable","configurable","writable","arg","_toPrimitive","String","input","hint","prim","Symbol","toPrimitive","undefined","res","TypeError","Number","TouchableNativeFeedback","Component","getExtraButtonProps","extraProps","background","props","type","borderless","color","attribute","rippleRadius","useForeground","render","style","rest","createElement","extraButtonProps","exports","GenericTouchable","defaultProps","rippleColor","Platform","Version"],"sources":["TouchableNativeFeedback.android.tsx"],"sourcesContent":["import {\n  Platform,\n  TouchableNativeFeedbackProps,\n  ColorValue,\n} from 'react-native';\nimport * as React from 'react';\nimport { Component } from 'react';\nimport GenericTouchable, { GenericTouchableProps } from './GenericTouchable';\n\nexport type TouchableNativeFeedbackExtraProps = {\n  borderless?: boolean;\n  rippleColor?: number | null;\n  rippleRadius?: number | null;\n  foreground?: boolean;\n};\n\n/**\n * TouchableNativeFeedback behaves slightly different than RN's TouchableNativeFeedback.\n * There's small difference with handling long press ripple since RN's implementation calls\n * ripple animation via bridge. This solution leaves all animations' handling for native components so\n * it follows native behaviours.\n */\nexport default class TouchableNativeFeedback extends Component<\n  TouchableNativeFeedbackProps & GenericTouchableProps\n> {\n  static defaultProps = {\n    ...GenericTouchable.defaultProps,\n    useForeground: true,\n    extraButtonProps: {\n      // Disable hiding ripple on Android\n      rippleColor: null,\n    },\n  };\n\n  // could be taken as RNTouchableNativeFeedback.SelectableBackground etc. but the API may change\n  static SelectableBackground = (rippleRadius?: number) => ({\n    type: 'ThemeAttrAndroid',\n    // I added `attribute` prop to clone the implementation of RN and be able to use only 2 types\n    attribute: 'selectableItemBackground',\n    rippleRadius,\n  });\n  static SelectableBackgroundBorderless = (rippleRadius?: number) => ({\n    type: 'ThemeAttrAndroid',\n    attribute: 'selectableItemBackgroundBorderless',\n    rippleRadius,\n  });\n  static Ripple = (\n    color: ColorValue,\n    borderless: boolean,\n    rippleRadius?: number\n  ) => ({\n    type: 'RippleAndroid',\n    color,\n    borderless,\n    rippleRadius,\n  });\n\n  static canUseNativeForeground = () => Platform.Version >= 23;\n\n  getExtraButtonProps() {\n    const extraProps: TouchableNativeFeedbackExtraProps = {};\n    const { background } = this.props;\n    if (background) {\n      // I changed type values to match those used in RN\n      // TODO(TS): check if it works the same as previous implementation - looks like it works the same as RN component, so it should be ok\n      if (background.type === 'RippleAndroid') {\n        extraProps['borderless'] = background.borderless;\n        extraProps['rippleColor'] = background.color;\n      } else if (background.type === 'ThemeAttrAndroid') {\n        extraProps['borderless'] =\n          background.attribute === 'selectableItemBackgroundBorderless';\n      }\n      // I moved it from above since it should be available in all options\n      extraProps['rippleRadius'] = background.rippleRadius;\n    }\n    extraProps['foreground'] = this.props.useForeground;\n    return extraProps;\n  }\n  render() {\n    const { style = {}, ...rest } = this.props;\n    return (\n      <GenericTouchable\n        {...rest}\n        style={style}\n        extraButtonProps={this.getExtraButtonProps()}\n      />\n    );\n  }\n}\n"],"mappings":"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"}